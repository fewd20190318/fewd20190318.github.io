<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FEWD</title>
    <link>http://example.org/</link>
    <description>Recent content on FEWD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jan 2017 18:05:18 -0500</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/00-dev-tools-github/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/00-dev-tools-github/objectives/</guid>
      <description> Introduce tools you will be using throughout the class
 Achieve high-level understanding of git and why developers use it
 Introduce students to a git workflow that will be used to submit (and recieve feeback on) assignments
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/01-html-basics/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/objectives/</guid>
      <description> Understand how web pages are structured
 Introduce some of the most frequently used html tags
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/00-dev-tools-github/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/00-dev-tools-github/agenda/</guid>
      <description> Tools Overview &amp;amp; Folder Organization
 Git Overview
 GitHub Tutorial
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/01-html-basics/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/agenda/</guid>
      <description> HTML Structure
 Overview of basic HTML Tags
 Code Along (GA Press Release)
 Lab (Cookie Recipe)
  </description>
    </item>
    
    <item>
      <title>HTML Structure</title>
      <link>http://example.org/01-html-basics/html-structure/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/html-structure/</guid>
      <description> Same principles that apply to newspapers and documents also apply to html pages
 Most important content should be displayed at the top with larger font
  </description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>http://example.org/00-dev-tools-github/tools/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/00-dev-tools-github/tools/</guid>
      <description> Project Folders and Best Practices for project organization
 Saving and Opening Files Sublime
 Web Browser Check (Google Chrome)
 Slack
 Quick intro to Chrome Developer Tools
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/06-flexbox/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/objectives/</guid>
      <description> Introduce flexbox
 Understand the differences between flexbox and floats
  </description>
    </item>
    
    <item>
      <title>Git Overview</title>
      <link>http://example.org/00-dev-tools-github/git-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/00-dev-tools-github/git-overview/</guid>
      <description>What is Git?  Version control for Programmers
 Like Microsoft Word &amp;ldquo;Track Changes&amp;rdquo; feature with superpowers
 Makes it easy for programmers to collaborate and work on the same codebase
 SVN (subversion) and CVS are other version control programs (Git is the most popular)
  What is Github?  Web-based Git repository hosting service
 Built on top of git
 Home to +90% of all open source projects</description>
    </item>
    
    <item>
      <title>HTML Tag Anatomy</title>
      <link>http://example.org/01-html-basics/html-tag-anatomy/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/html-tag-anatomy/</guid>
      <description>What is a Tag?  Tags act like containers, they tell the browser what type of information lies between (aka the content) the opening and closing tag
 Opening Tag
 comprised of character(s) surrounded by less than and equal than signs (brackets) characters within the brackets indicates the tags purpose  Closing Tag
 Same as opening tag except closing tag contains a forward slash which informs browser that element has ended   Terms “tags” and “elements” are often used interchangeably</description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/06-flexbox/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/agenda/</guid>
      <description> Lab: Relaxr Blog
 Flexbox Overview
 Flexbox Terminology
 Flex Containter Properties
 Flex Item Properties
 Exercise
 Lab
  </description>
    </item>
    
    <item>
      <title>Git Tutorial</title>
      <link>http://example.org/00-dev-tools-github/github-tutorial/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/00-dev-tools-github/github-tutorial/</guid>
      <description>Initial Setup Step 1: Create a Github Account* *one-time step
&amp;nbsp;
Step 2: Download Github Desktop software* *one-time step
&amp;nbsp;
Step 3: Sign in to Github Account through the Github Desktop application  Github Desktop -&amp;gt; Preferences -&amp;gt; Accounts  *one-time step / Use your Github account username &amp;amp; password
&amp;nbsp;
Step 4: Create a folder named github in your &amp;ldquo;class&amp;rdquo; folder* *one-time step
&amp;nbsp;
Starting an Assignment Step 5a: Fork Instructor Repository  The link for the Instructor repository will be provided to you  &amp;nbsp;</description>
    </item>
    
    <item>
      <title>HTML Attributes</title>
      <link>http://example.org/01-html-basics/html-attributes/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/html-attributes/</guid>
      <description>What is an HTML Attribute?  Attributes provide additional information about the contents of the an element.
 They are placed in the opening tag
 They have two parts: name, value
  Attribute Structure  Attribute Name
 Indicates what kind of extra information you are supplying to the browser about the content in the element characters within the brackets indicates the tags purpose  Attribute Value</description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/02-css-basics/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/objectives/</guid>
      <description> Review HTML tags covered in prior class
 Learn about relative paths and how they differ from absolute paths
 Intro to css and learn how to add css to your site
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/03-css-selectors-box-model/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/objectives/</guid>
      <description> Understand Classes and IDs and how they are different
 Introduce CSS selectors
 Understand how CSS cascades
 Introduce the CSS Box Model
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/04-page-layout/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/objectives/</guid>
      <description> Discuss concept of page structure &amp;amp; layouts
 Understand how divs are used
 Introduce semantic elements and how they are used
 Introduce CSS floats
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/05-css-positioning-and-colors/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/objectives/</guid>
      <description> Introduce CSS Colors
 Discuss CSS Positioning
 Understand how to handle background images
  </description>
    </item>
    
    <item>
      <title>Videos</title>
      <link>http://example.org/21-class-resources/videos/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/21-class-resources/videos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lab: Relaxr Blog</title>
      <link>http://example.org/06-flexbox/lab-relaxr/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/lab-relaxr/</guid>
      <description> Lab: Relaxr Blog  Work in teams (2 to 3 students) to recreate the html page depicted in the image below.
 The files for this lab can be found in the following folder: starter_code/relaxr_blog
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/07-intro-to-programming/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/objectives/</guid>
      <description> Understand what programming is all about
 Introduce concept of pseudocode
 Walk through some actual code and use pattern matching to fix broken programs
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/08-intro-to-jquery/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/objectives/</guid>
      <description> Introduce the DOM
 Introduce jQuery
 Understand how jQuery is different than native javascript
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/09-variables-datatypes-conditionals/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/objectives/</guid>
      <description> Introduce variables and identify best cases to use them
 Differentiate most used javascript data types
 Introduce logical &amp;amp; comparison operators
 Introduce conditionals
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/10-functions/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/objectives/</guid>
      <description> Understand functions and why they are used
 Understand how functions can be used to promote code reuse within your application
 Introduce Anonymous functions and understand how they are different than named functions
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/11-javascript-lab/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/objectives/</guid>
      <description> Apply knowledge of HTML, CSS and Javascript to build an application  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/objectives/</guid>
      <description> Review Arrays and introduce a couple of different ways to iterate (loop) through an array
 Introduce the concept of $(this) and why it is useful
 Leverage javascript knowledge to complete Rock, Paper, Scissors game
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/13-objects/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/13-objects/objectives/</guid>
      <description> Review Javascript Objects and understand why they are useful
 See examples of how objects can be used in conjunction with arrays
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/14-responsive-design/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/objectives/</guid>
      <description> Understand difference between fixed-width design and responsive design
 Learn about to Media Queries &amp;amp; Breakpoints and why they are important
 Learn about relative units of measure such as %s, EMs &amp;amp; REMs
 Discuss the concept of progressive enhancement
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/15-responsive-design-lab/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/objectives/</guid>
      <description> Learn about Bootstrap and its responsive grid
 Use knowledge of responsive design to turn a fixed-width site into a fully responsive site
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/16-forms/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/16-forms/objectives/</guid>
      <description> Learn about Forms and the different type of form elements  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/17-working-with-apis/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/objectives/</guid>
      <description> Learn about APIs and understand how they are used  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>http://example.org/18-final-projects-lab/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/18-final-projects-lab/objectives/</guid>
      <description> See demos of libraries you may find helpful
 Use in-class time to work on final projects
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/02-css-basics/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/agenda/</guid>
      <description> HTML Review Exercise
 Relative Paths
 Intro to CSS
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/03-css-selectors-box-model/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/agenda/</guid>
      <description> CSS Intro Review
 Classes and IDs
 CSS Selectors Overview
 Box Model
 Code Along: Tags &amp;amp; Boxes
 Lab: Fashion Blog
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/04-page-layout/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/agenda/</guid>
      <description> Last Class Review
 Code Along #1: Error Messages (Classes and Ids)
 Block and Inline Elements
 Containing Elements
 Semantic Elements
 CSS Floats
 Code Along #2: Two-Column Layout
 Lab: Layout Challenge
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/05-css-positioning-and-colors/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/agenda/</guid>
      <description> Review last class
 Review Layout Challenge
 CSS Colors
 CSS Positioning
 Background Images
 Code Along
 Lab
  </description>
    </item>
    
    <item>
      <title>Last Class Review</title>
      <link>http://example.org/04-page-layout/last-class-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/last-class-review/</guid>
      <description>CSS Selectors Overview  Many different types of selectors that allow you to target rules to specific elements in an HTML document
 Selectors are case sensitive, must match element names and attributes exactly
     Selector Meaning Example     Universal Selector Applies to all elements *{}   Type Selector Match elements names h1, h2, h3 {}   Class Selector Matches all elements with a class attribute value matching on specified after a period (.</description>
    </item>
    
    <item>
      <title>Tag Overview</title>
      <link>http://example.org/01-html-basics/tag-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/tag-overview/</guid>
      <description>&amp;lt;html&amp;gt;, &amp;lt;body&amp;gt;, &amp;lt;head&amp;gt;, &amp;lt;title&amp;gt;  &amp;lt;html&amp;gt;
 Represents the root (top-level element) of an HTML document, so it is also referred to as the root element
 All other elements must be descendants of this element.
  &amp;lt;body&amp;gt;
 Everything inside the body tag is shown inside the browser window  &amp;lt;head&amp;gt;
 Contains information about the page (vs shown on the pages
 Title and Links to other files are usually specified in the head element</description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/07-intro-to-programming/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/agenda/</guid>
      <description> Discuss Final Projects
 Last Class Review
 What is Programming?
 What is Pseudocode?
 Class Exercise: Thermostat
 Group Exercise: Rock, Paper, Scissors
 What is Javascript?
 Code Along: Color Scheme Switcher
 Lab: Traffic Light
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/08-intro-to-jquery/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/agenda/</guid>
      <description> Discuss the DOM
 Introduction to jQuery
 Review jQuery Code Examples
 Code Along: Color Scheme Switcher (with jQuery)
 Code Along: FAQ
 Lab: jQuery DOM Selector Practice
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/09-variables-datatypes-conditionals/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/agenda/</guid>
      <description> Last Class Review
 Code Along: FAQ
 Console Log
 Variables
 Data Types
 Arithmetic Operators
 Code Along: Score Keeper
 Comparison &amp;amp; Logical Operators
 Conditionals
 Code Alongs: Compare That &amp;amp; Blackout
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/10-functions/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/agenda/</guid>
      <description> Last Class Review
 Discuss Functions
 Code Along: Geometry Formulas using Functions
 Code Along: HiLo
 Lab: Complete HiLo
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/11-javascript-lab/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/agenda/</guid>
      <description> Review concepts covered last class
 Lab: Weather Application
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/agenda/</guid>
      <description> Discuss arrays and collections
 Code Along: Array Exercise
 $(this)
 Lab: Rock Paper Scissors
 Discuss Final Projects with each student (5 minutes)
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/13-objects/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/13-objects/agenda/</guid>
      <description> Discuss objects
 Code Along
 Lab: Country Flags
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/14-responsive-design/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/agenda/</guid>
      <description> Fixed Width and Mobile Layouts
 Responsive Design Overview
 Viewport Meta Tag
 Media Queries and Breakpoints
 Grids
 Code Along
 Ems / Rems
 Lab
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/15-responsive-design-lab/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/agenda/</guid>
      <description> Review Concepts from last class
 Discuss Bootstrap and its responsive grid
 Lab: Startup Matchmaker - Responsive
 Final Project Checkins
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/16-forms/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/16-forms/agenda/</guid>
      <description> Discuss Forms
 Styling Tips for Forms
 Code Along #1: Registration Form
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/17-working-with-apis/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/agenda/</guid>
      <description> Discuss JSON
 Understand APIs and why they are used
 Explore a real use case of API usage
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>http://example.org/18-final-projects-lab/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/18-final-projects-lab/agenda/</guid>
      <description> Introduce a few js libraries / concepts that you can put to use in your projects
 Lab: Final Projects
  </description>
    </item>
    
    <item>
      <title>Last Class Review</title>
      <link>http://example.org/09-variables-datatypes-conditionals/last-class-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/last-class-review/</guid>
      <description>DOM  Document Object Model
 Browsers views HTML pages as documents and provides developers with a means of programatically referencing HTML pages using Javascript
  What is jQuery?  A Javascript library that allows developers to manipulate the DOM using CSS selectors
 jQuery provides an alternative (more intuitive) way of referencing the DOM (HTML elements) so we can add behavior to our pages
  // selecting an element using native/pure javascript document.</description>
    </item>
    
    <item>
      <title>CSS Intro Review</title>
      <link>http://example.org/03-css-selectors-box-model/css-intro-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/css-intro-review/</guid>
      <description>What is CSS?  Cascading Style Sheet
 Allows you to control design of page
 CSS allows you to create rules that specify how the content of an element should appear
  p { color: black; }  Anatomy of a CSS Rule  p { color: black; } h1, h2, h3 { font-family: Arial; color: #191919; }  Adding CSS to your site There are three ways to add css to your site</description>
    </item>
    
    <item>
      <title>Code Along #1</title>
      <link>http://example.org/04-page-layout/code-along-1/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/code-along-1/</guid>
      <description> Code Along #1: Error Messages  Using Sublime, open the folder called error_messages (found within the starter_code) folder  </description>
    </item>
    
    <item>
      <title>Last Class Review</title>
      <link>http://example.org/05-css-positioning-and-colors/last-class-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/last-class-review/</guid>
      <description>Topics We Covered Last Class  Block, Inline and Inline-Block elements
 Containing elements:&amp;lt;div&amp;gt; and semantic tags
 CSS Floats
  Block, Inline and Inline-Block elements  Block Level Elements
 By default, block elements take up an entire row regardless of the width of their content
 Example block elements: &amp;lt;p&amp;gt;, &amp;lt;h1&amp;gt;, &amp;lt;div&amp;gt;
 Full list of block level elements can be found here
  Inline Elements</description>
    </item>
    
    <item>
      <title>Array Overview</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/array-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/array-overview/</guid>
      <description>What are arrays?  A collection of objects or items &amp;ldquo;Zero-based&amp;rdquo; - positions (called indexes) start at zero Very easy way to store multiple items Arrays can hold items of different datatypes (i.e. all items in an arry don&amp;rsquo;t have to be the same datatype) Used extensively in programming  Declaring an array Two ways to declare an array
// Declaring an empty array using the Array constructor syntax var names = new Array(); // Declaring an empty array using literal notation (preferred) var names = []; // Declaring an array using literal notation with data var names = [&#39;larry&#39;, &#39;curly&#39;, &#39;moe&#39;];  The best practice is to use the literal notation whenever possible</description>
    </item>
    
    <item>
      <title>Bootstrap Overview</title>
      <link>http://example.org/15-responsive-design-lab/bootstrap-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/bootstrap-overview/</guid>
      <description>What is Bootstrap?  Front-end framework created by engineers at Twitter
 Initially created to address the issue of having inconsistent user interfaces across their internal web applications
 Has since become the most popular mobile first (responsive) framework on the web
 Collection of html, css, js and fonts
 Documentation can be found here
  Benefits of Bootstrap  Fully responsive out of the box
 Consistent design</description>
    </item>
    
    <item>
      <title>Code Along #1</title>
      <link>http://example.org/09-variables-datatypes-conditionals/code-along-1/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/code-along-1/</guid>
      <description> Code Along #1: FAQ (frequently asked questions)  Using Sublime, open the folder called faq (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use jQuery implement a F.A.Q. found on a company&amp;rsquo;s support page   </description>
    </item>
    
    <item>
      <title>Console Log</title>
      <link>http://example.org/09-variables-datatypes-conditionals/console-log/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/console-log/</guid>
      <description>A method of debugging and troubleshooting in Javascript
 Gives you the opportunity to print values to the log
 Can be used as a means of confirming your code is &amp;ldquo;on the right track&amp;rdquo;
 To print something to the console in Javascript, you use the console.log() method
  // in your javascript file // print out a name to the console console.log(&amp;quot;Kareem&amp;quot;); // print out values sentences with values (for more context) // this uses string concatenation - we&#39;ll go over that shortly // declare a variable called score and give it a value of 8 var score = 8; // print out the variable in a sentence console.</description>
    </item>
    
    <item>
      <title>Final Projects</title>
      <link>http://example.org/07-intro-to-programming/final-projects/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/final-projects/</guid>
      <description> Final Projects are a requirement of &amp;ldquo;course completion&amp;rdquo;
 Only requirements are the following:
 Use of HTML and CSS Use of &amp;ldquo;some&amp;rdquo; javascript  Project should be something that you are passionate about
 Click here for examples of what other GA students have built
 First deliverable will be to submit potential project ideas
  </description>
    </item>
    
    <item>
      <title>Flexbox Overview</title>
      <link>http://example.org/06-flexbox/flexbox-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/flexbox-overview/</guid>
      <description>What is Flexbox?  New layout mode introduced with CSS3
 Allows developers to create flexible layouts without having to rely on floats or inline-block elements
 Is direction-agnostic as opposed to the regular layouts (block which is vertically-based and inline which is horizontally-based)
 Widely supported across all modern browsers
  See the full list of layout modes here
 What problems does Flexbox solve?  Vertically centering a block of content inside its parent</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>http://example.org/17-working-with-apis/json/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/json/</guid>
      <description>What is JSON?  Stands for JavaScript Object Notation
 A way to store information in an organized, easy-to-access manner
 A popular way to send data from on web server (service) to another
 Resembles a normal Javascript Object (it contains properties and values) but does not contain methods
   { &amp;quot;id&amp;quot;: 1, &amp;quot;name&amp;quot;: &amp;quot;Scoobie Doo&amp;quot;, &amp;quot;favoriteFood&amp;quot;: &amp;quot;Scoobie Snacks&amp;quot; }  JSON Guidelines  Property names must be double-quoted strings</description>
    </item>
    
    <item>
      <title>Lab Overview</title>
      <link>http://example.org/15-responsive-design-lab/lab-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/lab-overview/</guid>
      <description> Lab: Startup Matchmaker  You have been hired to turn Startup Matchmaker into a fully responsive site  Requirements  Update Startup Matchmaker so the homepage&amp;rsquo;s content is effectively displayed on an iPhone 7 screen  </description>
    </item>
    
    <item>
      <title>Last Class Review</title>
      <link>http://example.org/10-functions/last-class-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/last-class-review/</guid>
      <description>Variables  declaring variables using var keyword
 assigning / reassigning variables
  // declaring a variable var firstName; // assigning a value to the variable firstName = &amp;quot;Cletus&amp;quot;;  // declare and assign an intial value to a variable var score = 0;  // declare and assign a value of 0 to the score variable var score = 0; // changing the value of the score variable from 0 to 3 score = 3;  Data types  Strings</description>
    </item>
    
    <item>
      <title>Last Class Review</title>
      <link>http://example.org/11-javascript-lab/last-class-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/last-class-review/</guid>
      <description>What are Functions?  Allows you to group a series of statements together to perform a specific task
 Functions are used to promote “code reuse”
 You can control when functions are executed, for example - you can write functions that only get executed (or called) when a user clicks a specific button
  // a simple function that greets you with a &#39;Good Morning&#39; alert // 1) Declare a function named greeting function greeting(){ alert(&#39;Good Morning&#39;); }; // 2) Call (or run) the function greeting();  Declaring a Function  Use the function keyword to declare a function</description>
    </item>
    
    <item>
      <title>Object Overview</title>
      <link>http://example.org/13-objects/overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/13-objects/overview/</guid>
      <description>Objects  Objects are used to represent real world objects in programming
 Within an object, variables are known as properties and functions are known as methods
 Curly braces are a means of identifying if a variable is an object
  // create an object that represents a dog var myDog = { name: &amp;quot;Fido&amp;quot;, age: 4, speak: function() { console.log(&#39;Woof woof&#39;); } }   In the example above, we created an object and stored it in a variable called myDog</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>http://example.org/09-variables-datatypes-conditionals/variables/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/variables/</guid>
      <description>What are variables?  Similar to algebra
 Helps you represent data or values
 Used to help your program “remember” values
 Can be thought of as a “box” that we put values in
 In programming, you store values in variables if you plan on referencing that value at a later time
  Declaring Variables  Variables are created by declaring them
 Use the var keyword to declare a variable</description>
    </item>
    
    <item>
      <title>Layout Challenge Review</title>
      <link>http://example.org/05-css-positioning-and-colors/layout-challenge-review/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/layout-challenge-review/</guid>
      <description>We&amp;rsquo;ll review the &amp;ldquo;solutions&amp;rdquo; for the layout challenge. The solutions can be found in the following folder: starter_code/layout_challenge_solution</description>
    </item>
    
    <item>
      <title>API Overview</title>
      <link>http://example.org/17-working-with-apis/api-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/api-overview/</guid>
      <description>What is an API?  Stands for &amp;ldquo;Application Programing Interface&amp;rdquo;
 A way to exchange data between servers / services (i.e. software to software communication)
 Set of programming instructions and standards for accessing a Web-based software application or Web tool
 For example, Amazon.com released its API so that Web site developers could more easily access Amazon&amp;rsquo;s product information
 In a nutshell, if you want to leverage information from another website or application your first choice should be to use an API (if they offer one)</description>
    </item>
    
    <item>
      <title>Anonymous Functions</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/anonymous-functions/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/anonymous-functions/</guid>
      <description>What are Anonymous Functions? // An anonymous function is a function without a name function(width, height){ return width * height; }; // this function can later be stored as a variable and used later in your code var area = function(width, height){ return width * height; }; // Call anonymous function stored as a variable area(4, 5); // returns 20  When should you use Anonymous Functions?  Use for code that only needs to run once within a task</description>
    </item>
    
    <item>
      <title>Bootstrap Grid</title>
      <link>http://example.org/15-responsive-design-lab/bootstrap-grid/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/bootstrap-grid/</guid>
      <description>Overview of Bootstrap&amp;rsquo;s Grid  Bootstrap offers developers a mobile-first grid with 12 columns
 Float-based grid (the next version of bootstrap will use a flex-based grid)
 Built-in classes are used to control the widths of boxes within a bootstrap grid
  Containers  Bootstrap requires a containing element to house its grid system
 To create a containing element add a class of container or container-fluid to a parent container</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>http://example.org/09-variables-datatypes-conditionals/data-types/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/data-types/</guid>
      <description>Strings  Strings can consist of letters and other characters
 They are surrounded by either double quotes or single quotes
 Concatenation allows you to combine strings
  // declare a variable called color and store a string var color = &amp;quot;green&amp;quot;;  Single or double quotes can be used for strings, but the opening quote must match the closing quote
 String Methods  Javascript has some built-in methods that allow developers to work with strings</description>
    </item>
    
    <item>
      <title>Fixed Width Layout</title>
      <link>http://example.org/14-responsive-design/fixed-width-layouts/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/fixed-width-layouts/</guid>
      <description>Fixed Width Layouts  Method of designing websites so they look the same on any sized monitor
 Pre-dates advent of smartphones and mobile web-browsing
 Not optimized for smaller screens
 Uses pixels to set width of the layout
 Still fairly common
  Examples of Fixed Width Design  www.ikea.com
 www.ups.com
  Disadvantages of Fixed Width Design  Displayed the same way regardless of screen size</description>
    </item>
    
    <item>
      <title>Flexbox Terminology</title>
      <link>http://example.org/06-flexbox/flexbox-terminology/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/flexbox-terminology/</guid>
      <description>Flexbox Terminology Flex Container  The parent element in which flex items are contained
 Defined using the flex or inline-flex values of the display property
 flex: will make the flex-container a block-level element
 inline-flex: will make the flex-container an inline element
   Flex Item  Children of a flex container  Main Axis  The axis along which the flex items follow each other</description>
    </item>
    
    <item>
      <title>Function Overview</title>
      <link>http://example.org/10-functions/function-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/function-overview/</guid>
      <description> What are Functions?  Allows you to group a series of statements together to perform a specific task
 Functions are used to promote “code reuse”
 You can control when functions are executed, for example - you can write functions that only get executed (or called) when a user clicks a specific button
  // a simple function that greets you with a &#39;Good Morning&#39; alert // 1) Declare a function named greeting function greeting(){ alert(&#39;Good Morning&#39;); }; // 2) Call (or run) the function greeting();  </description>
    </item>
    
    <item>
      <title>Lab Overview</title>
      <link>http://example.org/11-javascript-lab/lab-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/lab-overview/</guid>
      <description>Lab: Weather Appliction  You will build a Weather Application that converts a Celsius temperature input by a user to Fahrenheit and changes the background image according to the weather.  Requirements  Application will take Celsius temperature (via user input) and convert it to Fahrenheit Application will change the background image of the page to match the new temperature  Please Note: The layout and &amp;ldquo;look and feel&amp;rdquo; of the application is totally up to you as long as you meet the requirements above</description>
    </item>
    
    <item>
      <title>Looping through Arrays</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/looping-through-arrays/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/looping-through-arrays/</guid>
      <description>Loops and Interation  Loops offer a quick and easy way to do something repeatedly
   Javascript offers many different ways to loop, click here for more information
 Using .forEach() (native javascript)  Native javascript offers a .forEach() method loops through (iterates) an array  var fruits=[“Banana”,”Apple”,”Pear”]; fruits.forEach(function(element,index){ console.log(element,index); });  JS Bin on jsbin.com
click here for more information about the forEach() loop
 Using $.</description>
    </item>
    
    <item>
      <title>Programming Protips</title>
      <link>http://example.org/08-intro-to-jquery/programming-protips/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/programming-protips/</guid>
      <description>Practice, practice, practice
 Use your developer console
 Google your issues (the answer is out there!!!!)
 Use pattern matching
 Break things on purpose to see how they work*
 Take a deep breath, errors are Learning Opportunities
  *but make sure you fix them before turning in your assignments :)</description>
    </item>
    
    <item>
      <title>Using Objects with Arrays</title>
      <link>http://example.org/13-objects/objects-with-arrays/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/13-objects/objects-with-arrays/</guid>
      <description>Objects with Arrays  Since objects are used to represent real world &amp;ldquo;things&amp;rdquo;, they are often combined with arrays to represent a collection of real world things  // declaring an array that contains objects as items var shows = [ { name: &amp;quot;Breaking Bad&amp;quot;, genre: &amp;quot;Drama&amp;quot;, network: &amp;quot;AMC&amp;quot; }, { name: &amp;quot;Game of Thrones&amp;quot;, genre: &amp;quot;Fantasy&amp;quot;, network: &amp;quot;HBO&amp;quot; }, { name: &amp;quot;Silicon Valley&amp;quot;, genre: &amp;quot;Comedy&amp;quot;, network: &amp;quot;HBO&amp;quot; }, { name: &amp;quot;Narcos&amp;quot;, genre: &amp;quot;Drama&amp;quot;, network: &amp;quot;Netflix&amp;quot; }, { name: &amp;quot;Vikings&amp;quot;, genre: &amp;quot;Action&amp;quot;, network: &amp;quot;History Channel&amp;quot; }, { name: &amp;quot;Power&amp;quot;, genre: &amp;quot;Drama&amp;quot;, network: &amp;quot;Starz&amp;quot; }, ];   In the code example above, we have an array called shows that contains a collection of objects that represents some TV shows  Looping (iteration) through an array of objects  Looping through an array of objects is technically the same as looping through an array of any other datatype (i.</description>
    </item>
    
    <item>
      <title>What is Programming?</title>
      <link>http://example.org/07-intro-to-programming/what-is-programming/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/what-is-programming/</guid>
      <description> List of instructions that a computer needs in order to complete a task
 Instructions are provided in a programming language that the computer understands
 These set of instructions are commonly referred as source code or a program
  </description>
    </item>
    
    <item>
      <title>Block and Inline Elements</title>
      <link>http://example.org/04-page-layout/block-inline-elements/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/block-inline-elements/</guid>
      <description>Block Level Elements  Always appear on a new line or row
 By default, block elements take up an entire row regardless of the width of their content
 Example block elements: &amp;lt;p&amp;gt;, &amp;lt;h1&amp;gt;, &amp;lt;div&amp;gt;
  JS Bin on jsbin.com
Full list of block level elements can be found here
 Inline Elements  Sit within a block level element and do not start on a new line</description>
    </item>
    
    <item>
      <title>Classes and Ids</title>
      <link>http://example.org/03-css-selectors-box-model/classes-and-ids/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/classes-and-ids/</guid>
      <description>Classes and Ids  Both are just HTML attributes
 Should start with a letter or underscore
 Can be applied to any html element
 Important: Use of the class or id attribute by itself does not change the appearance of an element; CSS/Javascript must be involved
  Class Attribute  Is used to group elements together, therefore establishing them as different from other elements on the page</description>
    </item>
    
    <item>
      <title>Arithmetic Operators</title>
      <link>http://example.org/09-variables-datatypes-conditionals/arithmetic-operators/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/arithmetic-operators/</guid>
      <description>What are Arithmetic Operators?  Mathematical symbol that can act on two values (or variables) and produce a result  JS Bin on jsbin.com</description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/code-along/</guid>
      <description> Code Along: Arrays Exercise  Using Sublime, open the folder called arrays_exercise (found within the starter_code) folder
 Instructions
 We&amp;rsquo;ll practice working with arrays by following the instructions specified in the exercise.js file   </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/13-objects/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/13-objects/code-along/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Declaring Functions</title>
      <link>http://example.org/10-functions/declaring-functions/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/declaring-functions/</guid>
      <description>Declaring a Function  Use the function keyword to declare a function
 Functions can be given a name
 The name must be followed by parentheses
 The opening and closing curly braces indicate a “code block”
 The statements for your function goes within the code block
 Simply declaring the function will not run this code, this function must be “called” in order for the code inside the function to be run</description>
    </item>
    
    <item>
      <title>Flex Container Properties</title>
      <link>http://example.org/06-flexbox/flex-container-properties/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/flex-container-properties/</guid>
      <description>The upcoming (and awesome) gifs were graciously borrowed from this insightful blog post that covers flexbox
 display  Defines a flex container
 inline or block depending on the given value
  .container { display: flex; /* or inline-flex */ }  flex direction  Establishes the main-axis and defines the direction flex items are placed in the flex container
 Determines whether the flex items are layed out as either horizontal rows or vertical columns</description>
    </item>
    
    <item>
      <title>Intro to the DOM</title>
      <link>http://example.org/08-intro-to-jquery/dom-intro/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/dom-intro/</guid>
      <description>DOM stands for Document Object Model
 Browsers view our webpages as documents
 Browsers represents documents in a couple of ways
 In the browser window as html Through the DOM  The DOM is just another way that our browser represents our documents
 We make our pages interactive by modifying the DOM
 Javascript is a scripting language that allows us to manipulate/modify the DOM
 Click here for a good overview of the DOM</description>
    </item>
    
    <item>
      <title>Making API Requests with jQuery</title>
      <link>http://example.org/17-working-with-apis/making-api-requests-with-jquery/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/making-api-requests-with-jquery/</guid>
      <description>What is Ajax?  AJAX stands for Asynchronous JavaScript And XML
 The meaning: web applications can send or receive data from the server without requesting an entire page - instead, they can just request or send an arbitrary amount of data
 In frontend development, Ajax Often used to make API requests that will fetch data from another service without having to refresh the web page
  Click here for more information about AJAX</description>
    </item>
    
    <item>
      <title>Milestone #1</title>
      <link>http://example.org/11-javascript-lab/milestone-1/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/milestone-1/</guid>
      <description>Follow the steps below to complete Milestone #1:
In groups of three or four students:
 Document the requirements of the proposed application
 User stories are a good way to document requirements, learn more here  Write the pseudo code for the application
  Timebox: 20 minutes</description>
    </item>
    
    <item>
      <title>Milestone #1</title>
      <link>http://example.org/15-responsive-design-lab/milestone-1/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/milestone-1/</guid>
      <description>Follow the steps below to complete Milestone #1:
In groups of four:
 Sketch out your proposed layout for mobile version of the site  Some things to think about:
 Will you need to hide menus?
 What content should be featured on a narrow screen?
  Timebox: 15 minutes</description>
    </item>
    
    <item>
      <title>Mobile Websites</title>
      <link>http://example.org/14-responsive-design/mobile-websites/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/mobile-websites/</guid>
      <description>What are Mobile Websites?  Initial response to the new screen sizes
 Involves creating a &amp;ldquo;mobile&amp;rdquo; version of your site for a specific device (i.e. iphone, iPad, etc)
 Used a different url such as http://m.sprint.com (m-dot websites)
  In 2007 iPhone, which came out in 2007, was a game changer. The iPhone’s screen, on the other hand, was only 320 pixels wide. Apple’s solution was to automatically shrink web pages to fit inside the viewing area of the screen (the viewport)</description>
    </item>
    
    <item>
      <title>Pseudocode</title>
      <link>http://example.org/07-intro-to-programming/pseudocode/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/pseudocode/</guid>
      <description> Process of writing a program without using the syntax of a programming language
 Mixture of natural language and high-level programming concepts
 There is no standard way to write pseudocode, use langauge that can be understood by technical and non-technical people
 Use pseudocode as an &amp;ldquo;outline&amp;rdquo; for your real code
  </description>
    </item>
    
    <item>
      <title>Exercise - HTML Review</title>
      <link>http://example.org/02-css-basics/html-review-exercise/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/html-review-exercise/</guid>
      <description> What Tag is it? Assignment: Review the image below of the html page below and identify what tags are being used.
Here are some tags you should look up:
 nav hr  </description>
    </item>
    
    <item>
      <title>API Example</title>
      <link>http://example.org/17-working-with-apis/api-example/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/api-example/</guid>
      <description> API Example: iTunes Search  Using Sublime, open the folder called itunes_search_api (found within the starter_code) folder
 As a class, we&amp;rsquo;ll walk through an example of using an API to fetch data from iTunes
  </description>
    </item>
    
    <item>
      <title>Calling Functions</title>
      <link>http://example.org/10-functions/calling-functions/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/calling-functions/</guid>
      <description> Calling a Function  To run the code inside of a function you use the function name followed by parentheses (don’t forget the parentheses!)
 Now you can call this function as many times as you want
  </description>
    </item>
    
    <item>
      <title>Class Exercise</title>
      <link>http://example.org/07-intro-to-programming/class-exercise/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/class-exercise/</guid>
      <description> Class Exercise: Thermostat logic in pseudocode We&amp;rsquo;re going to use pseudocode to describe the basic functionality of a smart thermostat
 As as class we are going to write some pseudocode for a program for a smart thermostat
 We’ll focus on coming up with the logic that will help the thermostat know when to turn the heat on and off
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/18-final-projects-lab/code-demos/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/18-final-projects-lab/code-demos/</guid>
      <description> Code Demos We&amp;rsquo;ll go through some libraries / concepts you may find helpful  Filtering &amp;amp; Sorting using mixitup
 Parallax
 Carousel
 Maps using Google Maps API
 Fetching data from another service using an API (itunes, giphy, soundcloud)
 Contact Form without the need for a Server
 Basic CRUD operations with Firebase
  </description>
    </item>
    
    <item>
      <title>Code Along #2</title>
      <link>http://example.org/09-variables-datatypes-conditionals/code-along-2/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/code-along-2/</guid>
      <description> Code Along #2: Score Keeper  Using Sublime, open the folder called score_keeper (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to complete an application used to keep track of a game&amp;rsquo;s score   </description>
    </item>
    
    <item>
      <title>Flex Items Properties</title>
      <link>http://example.org/06-flexbox/flex-items-properties/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/flex-items-properties/</guid>
      <description>align-self  allows the default alignment (or the one specified by align-items) to be overridden for individual flex items.   .item { align-self: auto | flex-start | flex-end | center | baseline | stretch; }  Order  controls the order in which flex-items appear in the flex container   .item { order: &amp;lt;integer&amp;gt;; }  flex-grow  defines the ability for a flex item to grow if necessary</description>
    </item>
    
    <item>
      <title>Form Overview</title>
      <link>http://example.org/16-forms/form-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/16-forms/form-overview/</guid>
      <description> What are forms?  Forms allow us to get data from users  How do forms work? Form Structure &amp;lt;form action=&amp;quot;http://www.example.com/subscribe.php&amp;quot; method=&amp;quot;get&amp;quot;&amp;gt; &amp;lt;p&amp;gt;This is where the form controls will appear.&amp;lt;/p&amp;gt; &amp;lt;/form&amp;gt;  Form Attributes  action: Required, the url on the server that will receive the information from the form
 method: Either a get or post
 Use get when the data being sent to server is not senstive information and is relatively small (search form) Use post when sending senstive data and when sending large amounts of data (registration form)   </description>
    </item>
    
    <item>
      <title>Intro to jQuery</title>
      <link>http://example.org/08-intro-to-jquery/jquery-intro/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/jquery-intro/</guid>
      <description>What is jQuery?  A javascript library
 Offers a simple way to acheive a variety of common javascript tasks
 Consistent across all browsers
 Does not do anything pure javascript cannot do, just does it with a more intuitive syntax
  Benefits of jQuery?  Uses CSS selectors
 Accomplishes more with less code
  CSS selectors means less code // selecting an element using native/pure javascript document.</description>
    </item>
    
    <item>
      <title>Milestone #2</title>
      <link>http://example.org/11-javascript-lab/milestone-2/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/milestone-2/</guid>
      <description>Follow the steps below to complete Milestone #2:
In your groups:
 Set up your projects (folder structure) Write the code that will do the following process temperature (in Celsius) input by a user and convert that temparature to Fahrenheit and Display the result on the screen  Timebox: 60 minutes
Note: While you will be working within a group, each student should have their own copy of the project on their computers</description>
    </item>
    
    <item>
      <title>Milestone #2</title>
      <link>http://example.org/15-responsive-design-lab/milestone-2/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/milestone-2/</guid>
      <description>Follow the steps below to complete Milestone #2:
In pairs (or groups):
 Plan out your breakpoint(s) (only one is required for this lab, but you can add more) Optional (but highly recommended): Update existing html and css to fit existing site (wide layout) into a grid  Timebox: 60 minutes
Note: While you will be working with a partner, each student should have their own copy of the project on their computers</description>
    </item>
    
    <item>
      <title>Responsive Design Overview</title>
      <link>http://example.org/14-responsive-design/responsive-design-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/responsive-design-overview/</guid>
      <description>What is Responsive Design?  A way of making websites that can be easily viewed and used on any type of device and size of screen  Advantages of Responsive Design  Developers only have to create one website, one design, one set of code, and one set of content
 Better optimized for search (SEO), no longer need to use m-dot websites
  Examples of Responsive Design  www.</description>
    </item>
    
    <item>
      <title>Relative Paths</title>
      <link>http://example.org/02-css-basics/relative-paths/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/relative-paths/</guid>
      <description>Relative Paths  Relative URLs can be used when linking to pages and files within your own website.
 Shorthand way of telling the browser where to find your files.
 Inform students that they have already seen this is use with the link tag when referencing a css file
  Example Project with Multiple Folders/Files Navigating within the Same Folder Linking from music index page to the music reviews page</description>
    </item>
    
    <item>
      <title>CSS Colors</title>
      <link>http://example.org/05-css-positioning-and-colors/css-colors/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/css-colors/</guid>
      <description>Specifying Colors in CSS Several ways to express colors in CSS
 Color Names Hex Codes RGB, RGBa HSL, HSLa  Color Names  colors represented by predefined names 147 color names this approach is limited  h1 { color: green }  Hex Codes  colors represented by values for red, green and blue in hexadecimal code  h1 { color: #66cdaa }  RGB  colors represented by values for red, green and blue expressed as numbers between 0 and 255  h1 { color: rgb(102, 205, 170) }  RGBa  Leverages CSS3 inclusion of the opacity property Just like RGB but allows you to specify the opacity as the fourth value (alpha value) alpha must be a number between 0.</description>
    </item>
    
    <item>
      <title>CSS Selectors</title>
      <link>http://example.org/03-css-selectors-box-model/css-selectors/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/css-selectors/</guid>
      <description>CSS Selectors Overview  Many different types of selectors that allow you to target rules to specific elements in an HTML document
 Selectors are case sensitive, must match element names and attributes exactly
     Selector Meaning Example     Universal Selector Applies to all elements *{}   Type Selector Match elements names h1, h2, h3 {}   Class Selector Matches all elements with a class attribute value matching on specified after a period (.</description>
    </item>
    
    <item>
      <title>Containing Elements</title>
      <link>http://example.org/04-page-layout/containing-elements/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/containing-elements/</guid>
      <description>Containing Elements  Elements that contain groups of elements
 For example, grouping all of the elements associated with the header in a &amp;lt;div&amp;gt;
 &amp;lt;div&amp;gt; tags are commonly used as containing elements
  In example the above example, orange lines represent &amp;lt;div&amp;gt; tags
&amp;lt;div&amp;gt;  Used to group a set of elements together in one block-level box
 &amp;lt;div&amp;gt; element are block-level elements which means they will start on a new line</description>
    </item>
    
    <item>
      <title>Semantic Elements</title>
      <link>http://example.org/04-page-layout/semantic-elements/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/semantic-elements/</guid>
      <description>Structure using Semantic tags  Similar to &amp;lt;div&amp;gt;s, semantic tags are container elements
 HTML5 introduced semantic tags that directly communicate type of content the container element contains
 Important note: incorrect use of the tags will not result in any errors (but may be confusing for your teammates)
 Above picture is just an example! This structure is not set in stone, use what makes sense for your project</description>
    </item>
    
    <item>
      <title>$(this)</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/this/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/this/</guid>
      <description>$(this)  this one of the most misunderstood concepts in javascript this (pure javascript) refers to the owner of a function $(this) (jquery) gives you reference to uses jQuery to select the current element  Example of $(this) in use // Event that makes the &amp;lt;p&amp;gt; element disappear when it is clicked $(&#39;p&#39;).click(function(){ // $(this) refers to the jQuery element, $(p), that // the click event was called on // Tell the &amp;lt;p&amp;gt; element to hide itself $(this).</description>
    </item>
    
    <item>
      <title>Adding jQuery to your projects</title>
      <link>http://example.org/08-intro-to-jquery/adding-jquery/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/adding-jquery/</guid>
      <description>There are two ways to add jQuery to your projects  download a jQuery file and store it within your project
 Use a CDN (content delivery network)
  Option #1 - Download jQuery file(s) &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Add jQuery by downloading jQuery file(s)&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;quot;js/jquery-2.1.4.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;js/app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  Option #2 - Use a CDN (Content delivery network) &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Add jQuery using a CDN&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;quot;//code.</description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/17-working-with-apis/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/17-working-with-apis/code-along/</guid>
      <description> Code Along: Weather Application  Using Sublime, open the folder called weather_app (found within the starter_code) folder
 As a class, we&amp;rsquo;ll leverage the API from OpenWeatherMap to display the current weather for a given city
  </description>
    </item>
    
    <item>
      <title>Comparison Operators</title>
      <link>http://example.org/09-variables-datatypes-conditionals/comparison-operators/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/comparison-operators/</guid>
      <description>What are Comparison Operators?  Compares two values and returns true or false (boolean)  JS Bin on jsbin.com</description>
    </item>
    
    <item>
      <title>Exercise</title>
      <link>http://example.org/06-flexbox/exercise/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/exercise/</guid>
      <description> Exercise: Flexbox Froggy During this exercise, you&amp;rsquo;ll go through an interactive tutorial focused on learning flexbox
 Each student complete this tutorial
 Timebox: 20 mins
  </description>
    </item>
    
    <item>
      <title>Flexbox with Floats</title>
      <link>http://example.org/06-flexbox/flexbox-with-floats/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/flexbox-with-floats/</guid>
      <description>Using Flexbox with Floats  Flexbox are often used together to create page structures
 Floats can be used for the layouts with flexbox being used to vertically or horizontally align elements inside of a container
 Flex containers can be floated
 Flex-items cannot be floated, however content inside of a flex-item can be floated
  JS Bin on jsbin.com</description>
    </item>
    
    <item>
      <title>Form Elements</title>
      <link>http://example.org/16-forms/form-elements/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/16-forms/form-elements/</guid>
      <description>Text Input &amp;lt;form action=&amp;quot;http://www.example.com/login.php&amp;quot;&amp;gt; &amp;lt;p&amp;gt; Username: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;username&amp;quot; maxlength=&amp;quot;30&amp;quot; /&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;/form&amp;gt;  Text Input Example Text Input Attributes  type=&amp;ldquo;text&amp;rdquo;: Tells browser input will store plain text name: Used by the server to identify which form control that data came from maxlength: (optional) Specifies that max number of characters that can be entered  Password Input &amp;lt;form action=&amp;quot;http://www.example.com/login.php&amp;quot;&amp;gt; &amp;lt;p&amp;gt; Username: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;username&amp;quot; size=&amp;quot;15&amp;quot; maxlength=&amp;quot;30&amp;quot; /&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; Password: &amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;password&amp;quot; size=&amp;quot;15&amp;quot; maxlength=&amp;quot;30&amp;quot; /&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;/form&amp;gt;  Password Input Example Password Input Attributes  type=&amp;ldquo;password&amp;rdquo;: Tells browser input will store sensitive information, block characters from being displayed name: Used by the server to identify which form control that data came from maxlength: (optional) Specifies that max number of characters that can be entered  Text Area &amp;lt;form action=&amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Group Exercise</title>
      <link>http://example.org/07-intro-to-programming/group-exercise/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/group-exercise/</guid>
      <description>Group Exercise: Rock, Paper and Scissors Form groups and write pseudocode describing a game of Rock, Paper, Scissors</description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/18-final-projects-lab/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/18-final-projects-lab/lab/</guid>
      <description> Lab  Work on your final project
 Make sure your code is hosted (without any issues) on Github pages
  </description>
    </item>
    
    <item>
      <title>Milestone #3</title>
      <link>http://example.org/11-javascript-lab/milestone-3/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/milestone-3/</guid>
      <description>Follow the steps below to complete Milestone #3:
In your groups:
 Complete the application by adding logic that changes the background image to reflect the converted temperature   Example: If the converted temperature is 10 F (degrees) the background image should represent something cold
 Make the application your own - choose your own background images
  Timebox: 20 to 30 minutes
Note: While you will be working within a group, each student should have their own copy of the project on their computers</description>
    </item>
    
    <item>
      <title>Milestone #3</title>
      <link>http://example.org/15-responsive-design-lab/milestone-3/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/milestone-3/</guid>
      <description>Follow the steps below to complete Milestone #3:
In pairs (or groups):
 Add breakpoints so that all of the content (that you&amp;rsquo;ve chosen to expose) is viewable on iPhone 7 screens  Timebox: 30 minutes
Note: While you will be working with a partner, each student should have their own copy of the project on their computers</description>
    </item>
    
    <item>
      <title>Returning Values from Functions</title>
      <link>http://example.org/10-functions/returning-values-from-functions/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/returning-values-from-functions/</guid>
      <description>Many times you will write a function and expect a value to be returned - this is called a return value
 to have your function return a value you must use the return keyword in the last line of the body of your function
 You can store the returned value in a variable and use it for later
  // declare a function called bark // that *returns* a string respreseting &#39;woof woof&#39; function bark() { return &#39;woof woof!</description>
    </item>
    
    <item>
      <title>Viewport Meta Tag</title>
      <link>http://example.org/14-responsive-design/viewport-meta-tag/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/viewport-meta-tag/</guid>
      <description>What is the viewport?  Area on the computer or device screen where you are viewing a web page
 Viewport width is not always the same thing as screen width
 For example: A person&amp;rsquo;s labtop may have a maximum screen width of 1280px, but likes to resize their web browser to 800px (viewport width)  On mobile devices viewport width is the same as screen width because mobile devices don&amp;rsquo;t allow you to change the size of your browser</description>
    </item>
    
    <item>
      <title>Intro to CSS</title>
      <link>http://example.org/02-css-basics/css-intro/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/css-intro/</guid>
      <description>What is CSS?  Cascading Style Sheet
 Allows you to control design of page
 CSS allows you to create rules that specify how the content of an element should appear
  p { color: black; }  Anatomy of a CSS Rule  p { color: black; } h1, h2, h3 { font-family: Arial; color: #191919; }  Adding CSS to your site There are three ways to add css to your site</description>
    </item>
    
    <item>
      <title>CSS Selectors Examples</title>
      <link>http://example.org/03-css-selectors-box-model/css-selectors-examples/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/css-selectors-examples/</guid>
      <description>CSS Selectors Examples Child Selector Child Selector Example on jsbin.com
Descendent Selector Descendant Selector Example on jsbin.com
Adjacent Sibling Selector Adjacent Sibling Selector example on jsbin.com
General Sibling Selector General Sibling Selector Example on jsbin.com</description>
    </item>
    
    <item>
      <title>$() function</title>
      <link>http://example.org/08-intro-to-jquery/dollar-sign-function/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/dollar-sign-function/</guid>
      <description> jQuery uses a function called jQuery() to find elements on the page
 $() is shorthand for jQuery(); $() is what is used most often
  // both of these creates a jQuery object around // the &amp;lt;p&amp;gt; element(s) // This allows you to use jQuery methods on the element jQuery(&#39;p&#39;) === $(&#39;p&#39;);  We&amp;rsquo;ll be using the $(selector) syntax exclusively in this class
 </description>
    </item>
    
    <item>
      <title>Bonus Milestone</title>
      <link>http://example.org/11-javascript-lab/bonus-milestone/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/bonus-milestone/</guid>
      <description>Follow the steps below to complete the Bonus Milestone:
 Add logic that also allows users to convert from Fahrenheit to Celsius (currently the application only converts from Celsius to Fahrenheit)
 Add logic that displays an error message when the user enters a non number (for example: when users enter a letter or a special character such as &amp;ldquo;#&amp;rdquo; or &amp;ldquo;$&amp;rdquo; into the text field and tries to calculate the temperature conversion)</description>
    </item>
    
    <item>
      <title>Bonus Milestone</title>
      <link>http://example.org/15-responsive-design-lab/bonus-milestone/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/bonus-milestone/</guid>
      <description>Follow the steps below to complete the Bonus Milestone:
In pairs (or groups):
 Implement a hamburger menu that will be displayed on narrow screens
 When the user clicks on the hamburger menu, the hidden navigation items (i.e. Developers, Designers, How It Works, Our Team) should slide down
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/06-flexbox/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/code-along/</guid>
      <description> Code Along: Marketing Page Layout using Flexbox &amp;amp; Floats  Using Sublime, open the folder called layout_challenge (found within the starter_code) folder
 As a class, we&amp;rsquo;ll use flexbox and floats to create a marketing layout with nav (depicted in the image)
  </description>
    </item>
    
    <item>
      <title>Javascript Overview</title>
      <link>http://example.org/07-intro-to-programming/javascript-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/javascript-overview/</guid>
      <description> What is Javacript?  programming language created in 1995 by Netscape (now Mozilla)
 It was created in 10 days
 Not the same as java
  What does Javascript do?  Adds interactivity to your websites
 Makes web based software feel more like desktop software
 Improves user experience
  Why teach javascript in front-end web development?  Javascript is the only programming langauge that all web browsers understand  </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/12-arrays-and-advanced-javascript/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/12-arrays-and-advanced-javascript/lab/</guid>
      <description>Lab: Rock, Paper Scissors  Using Sublime, open the folder called rock_paper_scissors (found within the starter_code) folder
 Instructions
 Work in pairs/groups (each student should have their own copy of the app on your computers)
 Review the completed version of the app (found in folder called rock_paper_scissors_obfuscated) to understand how the app is expected to work
 Plan out your approach before coding (using pseudocode, whiteboarding, etc.)</description>
    </item>
    
    <item>
      <title>Logical Operators</title>
      <link>http://example.org/09-variables-datatypes-conditionals/logical-operators/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/logical-operators/</guid>
      <description>What are Logical Operators?  Evaluates between two conditions/expressions and returns true or false
 with &amp;amp;&amp;amp; (and) operators, both conditions have to be true in order for the whole expression to be true
 with ||(or) operators, either condition must be true for entire expression to be true
  JS Bin on jsbin.com</description>
    </item>
    
    <item>
      <title>Media Query Overview</title>
      <link>http://example.org/14-responsive-design/media-query-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/media-query-overview/</guid>
      <description>What are the Media Queries?  Key element in responsive design
 Allow you to apply different styles based on the screen size of the user&amp;rsquo;s device (viewport)
 Media Queries ask questions - Is the width of the viewport greater than 240px?
 Media queries don’t affect the HTML (the actual content and structure of the underlying page) — they only affect the styles that are applied to the page using CSS</description>
    </item>
    
    <item>
      <title>Styling Forms</title>
      <link>http://example.org/16-forms/styling-forms/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/16-forms/styling-forms/</guid>
      <description> Tips for Styling Forms  Use border box
 Use reset.css or normalize.css to reduce browser specific quirks
 Read the following:
 Mozilla Network Guide to Styling forms
 CSS Tricks Styling forms
 Code Tuts Styling forms using CSS3
   </description>
    </item>
    
    <item>
      <title>Working with Parameters</title>
      <link>http://example.org/10-functions/working-with-parameters/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/working-with-parameters/</guid>
      <description>Declaring Functions that need information  Some functions need additional information in order to perform a specific task
 This additional information is referred to as “parameters”
 To provide parameters to a function, you specify them inside the parentheses after the parameter name
 The parameters are used like variables within the function body
 We use the “return” keyword when we want to retrieve a value from our function, in the case of the example we want to retrieve the result of the multiplying the width times the height</description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/01-html-basics/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/code-along/</guid>
      <description> Code Along: GA Press Release  As a class, we&amp;rsquo;ll walk through using html to build out an html version of a press release
 Using Sublime, open the folder called ga_press_release (found within the starter_code) folder
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/02-css-basics/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/code-along/</guid>
      <description> Code Along: Building an &amp;ldquo;About Me&amp;rdquo; page  As a class, we&amp;rsquo;ll walk through using html and css to build the &amp;ldquo;About Me&amp;rdquo; page depicted in the image below
 Using Sublime, open the folder called about_me_and_portfolio files for this exercise can be found in your starter_code folder under the
  </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/02-css-basics/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/02-css-basics/lab/</guid>
      <description> Lab: Start/Complete Portfolio Page  Individually or in teams to finishing the fictional developer&amp;rsquo;s site by building our their portfolio page (depicted in the image below)
 You will be adding a page to your existing about_me_and_portfolio project
 The &amp;ldquo;About Me&amp;rdquo; and &amp;ldquo;Porfolio&amp;rdquo; pages should be linked using a relative url
  </description>
    </item>
    
    <item>
      <title>CSS Cascading Guidelines</title>
      <link>http://example.org/03-css-selectors-box-model/css-cascading-guidelines/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/css-cascading-guidelines/</guid>
      <description>How CSS Cascades There are guidelines that will determine which CSS rule takes precendent in the case of a conflict (when 2 or more css rules target the same selector)
 Last Rule
 Specificity
 Important
 Inheritance
  Last Rule  When two or more css rules have identical selectors, the latter of the two rules takes precedent   // in css p { color: red; } p { color: green; }  &amp;lt;!</description>
    </item>
    
    <item>
      <title>CSS Positioning</title>
      <link>http://example.org/05-css-positioning-and-colors/css-positioning/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/css-positioning/</guid>
      <description>CSS Positioning Normal Flow  Default way browser handles block-level elements
 Each block-level element sits on top of the next one
 If width is not specified, element will span the width of its container
  JS Bin on jsbin.com
Relative Positioning  Moves element in relation to where it would have been in normal flow
 Uses offset properties (top or bottom and left or right) to indicate how far to move the element from where it would have been in normal flow</description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/07-intro-to-programming/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/code-along/</guid>
      <description> Code Along: Color Switcher  Using Sublime, open the folder called color_switcher (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 Walk through an actual javascript code step-by-step
 Introduce variables, functions, listeners
 Talk about how javascript finding the elements to control?
 Make some small changes and examine the results.
   </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/16-forms/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/16-forms/code-along/</guid>
      <description> Code Along: Build a Registration Form  Using Sublime, open the folder called registration_form (found within the starter_code) folder
 As a class, we&amp;rsquo;ll use bootstrap and its form styles to build out a registration form
  </description>
    </item>
    
    <item>
      <title>Conditionals</title>
      <link>http://example.org/09-variables-datatypes-conditionals/conditionals/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/conditionals/</guid>
      <description>What are Conditionals?  Condtionals tests whether an “expression” evaluates to true or false and then makes a decision based on the results of that test
 if statements are the most common form of conditionals
 There are two types of if statements
 (if else) statements
 (if else if) statements
   (if else) statements  when evaluating between just two choices, use if/else
 These are great for “either or” situations</description>
    </item>
    
    <item>
      <title>Document Ready Function</title>
      <link>http://example.org/08-intro-to-jquery/document-ready/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/document-ready/</guid>
      <description>jQuery must wait for a page to be loaded before it can manipulate the page&amp;rsquo;s DOM
 jQuery provides a &amp;ldquo;document ready&amp;rdquo; function that will run once the DOM is fully loaded
 There are two ways to express the &amp;ldquo;document ready&amp;rdquo; function for jQuery
  Option #1: Long form syntax $(document).ready(function(){ // place your code here // jquery code must be placed inside of a document ready block })  Option #2: Short form alternative syntax $(function(){ // this is the same as the $(document).</description>
    </item>
    
    <item>
      <title>Final Project Deliverable #2</title>
      <link>http://example.org/13-objects/final-project-deliverable-2/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/13-objects/final-project-deliverable-2/</guid>
      <description>Final Project Deliverable #2 (Wireframes)  Create wireframes for you final project and submit them in a digital format to this Google Drive folder
 This is due Tuesday, October 17th
  Please don&amp;rsquo;t buy a tool just for this deliverable, you can use pen/paper or powerpoint to create perfectly good wireframes
 What are wireframes?  Wireframes are a visual illustration of your site&amp;rsquo;s layout and interface</description>
    </item>
    
    <item>
      <title>Functions Calling Other Functions</title>
      <link>http://example.org/10-functions/functions-calling-other-functions/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/functions-calling-other-functions/</guid>
      <description>Functions can call other functions  Function reusability is key results in cleaner code
 Reusing functions leverages key programming principle - Don&amp;rsquo;t Repeat Yourself
 In the example of below, the surfaceAreaOfCube function calls another function (areaOfSquare) instead of duplicating work that was already done
  // Function that calculates area of a square function areaOfSquare(side){ return side * side; }; areaOfSquare(3); // returns 9 // This is a function that calculates the // surface area of a cube that *reuses* the areaOfSquare function function surfaceAreaOfCube(side){ return 6 * areaOfSquare(side); }; surfaceAreaOfCube(7); // returns 42  JS Bin on jsbin.</description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/06-flexbox/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/06-flexbox/lab/</guid>
      <description> Lab: Magazine Layout using Flexbox &amp;amp; Floats  Work individually or in teams to recreate the magazine layout depicted in layouts_challenge/layouts.pdf file (found within the starter_code) in html  </description>
    </item>
    
    <item>
      <title>Media Query Parts</title>
      <link>http://example.org/14-responsive-design/media-query-parts/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/media-query-parts/</guid>
      <description>@media only screen and (min-width: 480px) { /** add styles here **/ }  @media  All media queries must start with @media  Media Type  Indicates what type of media the query will be using. Screen tells the browser the query will be used by a computer or mobile device
 The only keyword indicates that this query will be only be for the screen media type and no other</description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/01-html-basics/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>http://example.org/01-html-basics/lab/</guid>
      <description> Lab: Cookie Recipe  Work individually or in teams to create an html version of a Cookie recipe depicted in the images below
 Using Sublime, open the folder called cookie_recipe files for this exercise can be found in your starter_code
 Tips
 Focus on the content first, then the image then the CSS There will be some items that you will need to look up, CSS is one of them (don&amp;rsquo;t worry we will be going over this in the next class, but part of being a developer is being able to google your way to solutions)   </description>
    </item>
    
    <item>
      <title>CSS Box Model</title>
      <link>http://example.org/03-css-selectors-box-model/box-model/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/box-model/</guid>
      <description>CSS Box Model  Understanding the CSS Box Model is key to understanding how CSS works
 Going forward, you should view every element as a box (because that&amp;rsquo;s how browsers view them)
   Block elements in the image are outlined in red, while inline elements are outlined in green
 Every element is a box, some boxes contain other boxes &amp;lt;body&amp;gt;, &amp;lt;div&amp;gt; or &amp;lt;article&amp;gt;
 CSS allows you to create rules the control each individual box</description>
    </item>
    
    <item>
      <title>Homework</title>
      <link>http://example.org/11-javascript-lab/homework/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/11-javascript-lab/homework/</guid>
      <description> Homework Assignment - CitiPix Directions:
1) Fork the following respository:
Homework #4
 Review the assignment here
 Use process covered in the Git/Github Tutorial to submit your assignment
  </description>
    </item>
    
    <item>
      <title>Homework</title>
      <link>http://example.org/15-responsive-design-lab/homework/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/homework/</guid>
      <description> Work on your final projects - only a couple weeks left!!! </description>
    </item>
    
    <item>
      <title>Breakpoints</title>
      <link>http://example.org/14-responsive-design/breakpoints/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/breakpoints/</guid>
      <description>What are Breakpoints?  The points where your css style will change as a result of your media queries   @media only screen and (min-width: 320px) { /* Styles */ } @media only screen and (min-width: 320px) and (orientation: landscape) { /* Styles */ } @media only screen and (min-width: 321px) and (max-width : 700px) { /* Styles */ } @media only screen and (min-width: 701px) { /* Styles */ }  Recommended &amp;ldquo;Starting&amp;rdquo; Breakpoints  320px 480px 600px 768px 900px 1200px  Breakpoints should be selected based on your specific design</description>
    </item>
    
    <item>
      <title>Code Along #1</title>
      <link>http://example.org/10-functions/code-along-1/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/code-along-1/</guid>
      <description> Code Along #1: Geometry Calculator  Using Sublime, open the folder called geometry_formulas_with_functions (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to implement an app that calculates geometry functions   </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/07-intro-to-programming/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/lab/</guid>
      <description>Lab: Traffic Light  Using Sublime, open the folder called traffic_light (found within the starter_code) folder
 Instructions
 Fix the broken code
 Use &amp;ldquo;pattern matching&amp;rdquo; to identify what needs to be changed / added
 Work in pairs
 Your job is to fix this code:
 The yellow button changes the bulb to purple and the green light does not work, change the code so that the traffic light works correctly.</description>
    </item>
    
    <item>
      <title>jQuery in Action</title>
      <link>http://example.org/08-intro-to-jquery/jquery-in-action/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/jquery-in-action/</guid>
      <description>Here are some examples of things you can do with jQuery
 This is not a exhaustive list (not possible)
  Select Elements using CSS Selectors JS Bin on jsbin.com
Getting and Setting Content using jQuery Using methods like .html(), .text() and .val() you can get (i.e. retrieve) and set content on your pages
// get the text content stored in an element $(&#39;p.intro&#39;).text(); // set the content to another value $(&#39;p.</description>
    </item>
    
    <item>
      <title>Background Images</title>
      <link>http://example.org/05-css-positioning-and-colors/background-images/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/background-images/</guid>
      <description>background-image Property  background-image property allows you to place an image behind any HTML element
 Image can be &amp;ldquo;behind&amp;rdquo; the entire page or part of a page
 By default a background image will repeat to fill an entire box
  body { /* this image will be applied to the entire page */ background-image: url(&amp;quot;images/cool-background-image.gif&amp;quot;); } .hero-section { /* this image will be applied to container with a &amp;quot;hero-section&amp;quot; class attribute */ background-image: url(&amp;quot;images/another-cool-background-image.</description>
    </item>
    
    <item>
      <title>CSS Floats</title>
      <link>http://example.org/04-page-layout/css-floats/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/css-floats/</guid>
      <description>Floating Elements  Float property allows you to take an element in normal flow and place it as far to the left or right of the containing element as possible. Floats are a common way of creating multi-column layouts  Floating Guidelines  Floated elements should be assigned a width or unexpected behavior will occur (remember block level elements take up 100% width by default)
 Elements can be either floated left or right</description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/03-css-selectors-box-model/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/code-along/</guid>
      <description> Code Along: Tags &amp;amp; Boxes  As a class, we&amp;rsquo;ll walk through seeing examples of the box model in action
 Using Sublime, open the folder called tags_boxes files for this exercise can be found in your starter_code folder
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/05-css-positioning-and-colors/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/code-along/</guid>
      <description> Code Along #2: Fashion Blog II  Using Sublime, open the folder called fashion_blog_part_II (found within the starter_code) folder
 As a class, we&amp;rsquo;ll add a column to the fashion blog layout to match the layout in image depicted below.
  </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/05-css-positioning-and-colors/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/lab/</guid>
      <description> Lab: Relaxr Blog  Work in teams (2 to 3 students) to recreate the html page depicted in the image below.
 The files for this lab can be found in the following folder: starter_code/relaxr_blog
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/08-intro-to-jquery/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/code-along/</guid>
      <description> Code Along: Color Switcher using jQuery  Using Sublime, open the folder called color_scheme_switcher_jquery (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use jQuery (instead of native javascript) to get the color scheme switcher project working   </description>
    </item>
    
    <item>
      <title>Code Along #3</title>
      <link>http://example.org/09-variables-datatypes-conditionals/code-along-3/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/code-along-3/</guid>
      <description> Code Along #3: Compare That  Using Sublime, open the folder called compare_that (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to complete an application used to compare two numbers   </description>
    </item>
    
    <item>
      <title>Progressive Enhancement</title>
      <link>http://example.org/14-responsive-design/progressive-enhancement/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/progressive-enhancement/</guid>
      <description> What is progressive enhancement?  Design for the most narrow screens first then work your way up to larger screens
 Mobile-first approach to constructing web layouts
 See this article for information on progressive enhancement
  </description>
    </item>
    
    <item>
      <title>Single Responsibility Principle</title>
      <link>http://example.org/10-functions/single-responsibility-principle/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/single-responsibility-principle/</guid>
      <description>Single Responsibility Principle (SRP)  SRP is a programming best practice that advocates modular code
 Put another way, your programs should be broken up in such a way where each part is responsible for only one &amp;ldquo;thing&amp;rdquo; or domain
 SRP is often applied to functions
  Applying SRP to Functions  This concepts calls for your functions to only be &amp;ldquo;responsible&amp;rdquo; for one thing
 Often you&amp;rsquo;ll find that the logic in your functions are doing too much (for example: making calculations AND displaying the result to the screen)</description>
    </item>
    
    <item>
      <title>Code Along #2</title>
      <link>http://example.org/10-functions/code-along-2/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/code-along-2/</guid>
      <description> Code Along #2: HiLo  Using Sublime, open the folder called hilo (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to implement a guessing game   </description>
    </item>
    
    <item>
      <title>Code Along #4</title>
      <link>http://example.org/09-variables-datatypes-conditionals/code-along-4/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/code-along-4/</guid>
      <description> Code Along #4: Black Out  Using Sublime, open the folder called blackout (found within the starter_code) folder
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to complete an application imitate a light switch   </description>
    </item>
    
    <item>
      <title>Grids</title>
      <link>http://example.org/14-responsive-design/grid-overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/grid-overview/</guid>
      <description>What are grids?  layout technique that allows for content to be stacked both vertically and horizontally in a consistent and easily manageable fashion
 grid systems code is project-agnostic giving it a high degree of portability so that it may be adopted on new projects
  The above example is a grid system called Grid 960
Benefits of grids?  Increases productivity by providing simple and predictable layout scaffolding to HTML design</description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/08-intro-to-jquery/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/08-intro-to-jquery/lab/</guid>
      <description> Lab: jQuery DOM Selector Practice  Using Sublime, open the folder called jquery_dom_selector_practice (found within the starter_code) folder
 Instructions
 Follow the instructions specified in the exercise.js file   </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/10-functions/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/10-functions/lab/</guid>
      <description>Lab: Complete HiLo  Form groups and work together to complete the HiLo application
 Instructions: Add the following functionality
 The secret number should be randomly generated
 Players should be limited to only 5 guesses
 If the player reaches 5 guesses without guessing the correct number then an error message with appear
 The game should reset after 5 guesses has been reached or after the secret number has been correctly guessed</description>
    </item>
    
    <item>
      <title>Code Along #2</title>
      <link>http://example.org/04-page-layout/code-along-2/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/code-along-2/</guid>
      <description> Code Along #2: Page Layout using Floats  Using Sublime, open the folder called layout_challenge (found within the starter_code) folder
 As a class, we&amp;rsquo;ll use floats to create a two-column layout (depicted in the image)
  </description>
    </item>
    
    <item>
      <title>Responsive Grid Example</title>
      <link>http://example.org/14-responsive-design/responsive-grid-example/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/responsive-grid-example/</guid>
      <description> Responsive Grid Example  Using Sublime, open the folder called responsive_grid_example (found within the starter_code) folder
 We&amp;rsquo;ll review an example of a responsive grid
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/14-responsive-design/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/code-along/</guid>
      <description> Code Along: Responsive Three Column Layout  Using Sublime, open the folder called three_column_layout (found within the starter_code) folder
 As a class, we&amp;rsquo;ll convert this layout to a responsive layout
  </description>
    </item>
    
    <item>
      <title>Code Along</title>
      <link>http://example.org/15-responsive-design-lab/code-along/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/15-responsive-design-lab/code-along/</guid>
      <description> Lab: Responsive Marketing Layout (bootstrap)  Using Sublime, open the folder called marketing_with_nav (found within the starter_code) folder
 As a class, we&amp;rsquo;ll convert this layout to a responsive layout using bootstrap&amp;rsquo;s responsive grid
  </description>
    </item>
    
    <item>
      <title>Homework</title>
      <link>http://example.org/05-css-positioning-and-colors/homework/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/05-css-positioning-and-colors/homework/</guid>
      <description> Homework Assignment - Startup Matchmaker Directions:
 Fork the following respository: Homework #2
 Review the assignment here
 Use process covered in the Git/Github Tutorial to submit your assignment
  </description>
    </item>
    
    <item>
      <title>Homework</title>
      <link>http://example.org/09-variables-datatypes-conditionals/homework/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/09-variables-datatypes-conditionals/homework/</guid>
      <description> Homework Assignment - jQuery Traffic Light Directions:
1) Fork the following respository:
Homework #3
 Review the assignment here
 Use process covered in the Git/Github Tutorial to submit your assignment
  </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/03-css-selectors-box-model/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/lab/</guid>
      <description> Lab: Fashion Blog  Work individually or in teams to recreate the html page depicted in the image below.
 The files for this lab can be found in the following folder: starter_code/fashion_blog
  </description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/04-page-layout/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/04-page-layout/lab/</guid>
      <description> Lab: Layout Challenge  Work individually or in teams to recreate the layouts depicted in layouts_challenge/layouts.pdf file (found within the starter_code) in html
 Create a separate project folder for each layout
 For example, when recreating the layout for the Three-Column layout, create a new folder called three_column and add your index.html, and css files within that folder.   </description>
    </item>
    
    <item>
      <title>EMS / REMS</title>
      <link>http://example.org/14-responsive-design/ems-rems/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/ems-rems/</guid>
      <description>What are EMs?  Scalable unit that is used in web document media
 Font-size is computed relative to font-size of parent element
 Does not lock users into an absolute font-size (older browsers do not re-size text set in pixels when users zoom)
 Provides users with highlest level of control over the content they are viewing
  History: Old-fashioned metal typesetting, the em referred to the size of the metal plates that contained a raised letter, which had to be wide enough to fit the widest letter, the capital M.</description>
    </item>
    
    <item>
      <title>Final Project Deliverable #1</title>
      <link>http://example.org/07-intro-to-programming/final-project-deliverable-1/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/07-intro-to-programming/final-project-deliverable-1/</guid>
      <description> Final Project Deliverable #1 (Initial project proposals)  Submit a list of at least 3 final project ideas to me via direct message on Slack (Due Tuesday September 25th)
 I will meet with each of you next week to discuss your ideas
  </description>
    </item>
    
    <item>
      <title>Responsive Images</title>
      <link>http://example.org/14-responsive-design/responsive-images/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/responsive-images/</guid>
      <description> Tips for working with Images  Start with largest version of your image and use css styling to resize to desired size (more on this next class)
 Use max-width: 100% to prevent images from extending wider than its container
   // Apply to all images img { max-width: 100%; }  </description>
    </item>
    
    <item>
      <title>Homework</title>
      <link>http://example.org/03-css-selectors-box-model/homework/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>http://example.org/03-css-selectors-box-model/homework/</guid>
      <description> Homework Assignment - Resume Website for a Famous Person Directions:
 Fork the following respository: Homework #1
 Review the assignment here
 Use process covered in the Git/Github Tutorial to submit your assignment
  </description>
    </item>
    
    <item>
      <title>Rules of Thumb</title>
      <link>http://example.org/14-responsive-design/rules-of-thumb/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/rules-of-thumb/</guid>
      <description>All text should be expressed in EMs / REMs
 Use percentages for Horizontal measurements
 Consider using ems/rems for margins &amp;amp; padding if you want them to increase and decrease in proportion to the font-size
 Consider using percentages for left and right margins and padding so they change in proportion to the width of the containing element
 Use pixels (absolute measurement) for height/margins/paddings if you do not want those measurements to change relative to screen size</description>
    </item>
    
    <item>
      <title>Lab</title>
      <link>http://example.org/14-responsive-design/lab/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>http://example.org/14-responsive-design/lab/</guid>
      <description> Lab: Responsive Simple Marketing Layout  Using Sublime, open the folder called simple_marketing_layout (found within the starter_code) folder
 As a class, we&amp;rsquo;ll convert this layout to a responsive layout
  </description>
    </item>
    
    <item>
      <title>First Content</title>
      <link>http://example.org/basics/first-content/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:19 -0400</pubDate>
      
      <guid>http://example.org/basics/first-content/</guid>
      <description> Hello there </description>
    </item>
    
    <item>
      <title>First Content</title>
      <link>http://example.org/something_else/first-content/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:19 -0400</pubDate>
      
      <guid>http://example.org/something_else/first-content/</guid>
      <description> Hello there </description>
    </item>
    
  </channel>
</rss>