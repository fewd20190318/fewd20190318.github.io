<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FEWD</title>
    <link>/</link>
    <description>Recent content on FEWD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jan 2017 18:05:18 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Github HW Submission Instructions</title>
      <link>/21-class-resources/homework-submission-github-workflow/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/21-class-resources/homework-submission-github-workflow/</guid>
      <description>Before you start Step 1: Ensure you have a github folder Ensure that you have a folder named gitHub in the FEWD folder . You will be using this folder to manage all of your work that lives in Github through the course. This folder only needs to be created once.
Step 2: Log into to your Github account Ensure you are logged into your GitHub account on Github.com</description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>/01-html-basics/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/01-html-basics/objectives/</guid>
      <description> Understand how web pages are structured
 Introduce some of the most frequently used html tags
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/06-css-box-model/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/agenda/</guid>
      <description> Discuss how CSS Cascades
 Box Model
 Code Along: Tags &amp;amp; Boxes
 Lab: Fashion Blog
  </description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>/03-relative-paths/objectives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/03-relative-paths/objectives/</guid>
      <description> Learn about Relative Paths and why they are important  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/01-html-basics/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/01-html-basics/agenda/</guid>
      <description> HTML Structure
 Overview of basic HTML Tags
 Code Along (GA Press Release)
 Lab (Cookie Recipe)
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/03-relative-paths/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/03-relative-paths/agenda/</guid>
      <description> Discuss Relative Paths
 Complete Relative Paths exercise
  </description>
    </item>
    
    <item>
      <title>Margin</title>
      <link>/06-css-box-model/box-model-overview/margin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/box-model-overview/margin/</guid>
      <description>Margin  Margin represents the space between boxes  .thing { /* margin can be applied to individual sides of a box using margin-top, margin-bottom, margin-left or margin-right */ /* style below applies 20px to left side of box */ margin-left: 20px; } .other-thing { /* style below applies 10px to all four sides of box */ margin: 10px; } .gizmo { /* when 4 values are provided, then values are applied in a clockwork manner: margin: [top] [right] [bottom] [left]; */ /* style below applies 4px to top, 10px to right, 6px to bottom &amp;amp; 10px to left */ margin: 4px 10px 6px 10px; } .</description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>/02-git-github/objectives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02-git-github/objectives/</guid>
      <description> Achieve high-level understanding of git and why developers use it
 Introduce students to a git workflow that will be used to submit (and recieve feeback on) assignments
  </description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/03-relative-paths/overview/</link>
      <pubDate>Sun, 22 Jan 2017 18:08:00 -0500</pubDate>
      
      <guid>/03-relative-paths/overview/</guid>
      <description> Relative Paths  Relative URLs can be used when linking to pages and files within your own website.
 Shorthand way of telling the browser where to find your files.
 Inform students that they have already seen this is use with the link tag when referencing a css file
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/02-git-github/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/02-git-github/agenda/</guid>
      <description> Tools Overview &amp;amp; Folder Organization
 Git Overview
 Code Along: Working with Github
 Exercise: Working with Github
  </description>
    </item>
    
    <item>
      <title>HTML Structure</title>
      <link>/01-html-basics/html-structure/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/01-html-basics/html-structure/</guid>
      <description> Front page of a newspaper
 Which elements stand out and why?
 What would happen if every word was the same size font?
  Document in a word processor
HTML document
Summary  Structure helps readers better understand all forms of documents
 Documents leverage hierarchy, size and font weight to emphasize importance
 HTML pages are another type documents
  </description>
    </item>
    
    <item>
      <title>Last Rule</title>
      <link>/06-css-box-model/css-cascading-guidelines/last-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/css-cascading-guidelines/last-rule/</guid>
      <description>Last Rule  When two or more css rules have identical selectors, the latter of the two rules takes precedent   // in css p { color: red; } p { color: green; }  &amp;lt;!-- in html --&amp;gt; &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Sample Page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt; Color will be green&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  Here the &amp;lt;p&amp;gt; tag will be green because the last conflicting rule took precedent</description>
    </item>
    
    <item>
      <title>Padding</title>
      <link>/06-css-box-model/box-model-overview/padding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/box-model-overview/padding/</guid>
      <description>Padding  Padding is the space between the border of a box and any content contained within it
 Adding padding helps to increase readability of a box’s content
  .thing { /* padding can be applied to individual sides of a box using padding-top, padding-bottom, padding-left or padding-right */ /* style below applies 20px to left side of box */ padding-left: 20px; } .other-thing { /* style below applies 10px to all four sides of box */ padding: 10px; } .</description>
    </item>
    
    <item>
      <title>HTML Tag Anatomy</title>
      <link>/01-html-basics/html-tag-anatomy/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/01-html-basics/html-tag-anatomy/</guid>
      <description>What is a Tag?  Tags act like containers, they tell the browser what type of information lies between (aka the content) the opening and closing tag
 Opening Tag
 comprised of character(s) surrounded by less than and equal than signs (brackets) characters within the brackets indicates the tags purpose  Closing Tag
 Same as opening tag except closing tag contains a forward slash which informs browser that element has ended   Terms “tags” and “elements” are often used interchangeably</description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/07-page-layout-flexbox/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/07-page-layout-flexbox/agenda/</guid>
      <description> Block and Inline Elements
 Containing Elements
 Semantic Elements
 Flexbox
 Exercise: Flexbox Froggy
 Code Along: Layout Challenge
 Lab: Layout Challenge
  </description>
    </item>
    
    <item>
      <title>Example</title>
      <link>/03-relative-paths/example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/03-relative-paths/example/</guid>
      <description>Example Project with Multiple Folders/Files Navigating within the Same Folder Linking from music index page to the music reviews page
&amp;lt;a href=&amp;quot;reviews.html&amp;quot;&amp;gt; Music Reviews &amp;lt;/a&amp;gt;  Navigating to a file in a Child Folder Linking from the homepage (top-level index.html) to the music listings page
&amp;lt;a href=&amp;quot;music/listings.html&amp;quot;&amp;gt; Music Listings &amp;lt;/a&amp;gt;  Navigating to a file in a Grandchild Folder Linking from the homepage (top-level index.html) to the dvd reviews page</description>
    </item>
    
    <item>
      <title>Git Overview</title>
      <link>/02-git-github/git-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02-git-github/git-overview/</guid>
      <description>What is Git?  Version control for Programmers
 Like Microsoft Word &amp;ldquo;Track Changes&amp;rdquo; feature with superpowers
 Makes it easy for programmers to collaborate and work on the same codebase
 SVN (subversion) and CVS are other version control programs (Git is the most popular)
  What is Github?  Web-based Git repository hosting service
 Built on top of git
 Home to +90% of all open source projects</description>
    </item>
    
    <item>
      <title>Block and Inline Elements</title>
      <link>/07-page-layout-flexbox/block-inline-elements/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/07-page-layout-flexbox/block-inline-elements/</guid>
      <description>Block Level Elements  Always appear on a new line or row
 By default, block elements take up an entire row regardless of the width of their content
 Example block elements: &amp;lt;p&amp;gt;, &amp;lt;h1&amp;gt;, &amp;lt;div&amp;gt;
  JS Bin on jsbin.com
Full list of block level elements can be found here
 Inline Elements  Sit within a block level element and do not start on a new line</description>
    </item>
    
    <item>
      <title>HTML Attributes</title>
      <link>/01-html-basics/html-attributes/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/01-html-basics/html-attributes/</guid>
      <description>What is an HTML Attribute?  Attributes provide additional information about the contents of the an element.
 They are placed in the opening tag
 They have two parts: name, value
  Attribute Structure  Attribute Name
 Indicates what kind of extra information you are supplying to the browser about the content in the element characters within the brackets indicates the tags purpose  Attribute Value</description>
    </item>
    
    <item>
      <title>Flexbox Terminology</title>
      <link>/07-page-layout-flexbox/flexbox/flexbox-terminology/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>/07-page-layout-flexbox/flexbox/flexbox-terminology/</guid>
      <description>Flex Container  The parent element in which flex items are contained
 Defined using the flex or inline-flex values of the display property
 flex: will make the flex-container a block-level element
 inline-flex: will make the flex-container an inline element
   Flex Item  Children of a flex container  Main Axis  The axis along which the flex items follow each other
 flex-direction property determines the main axis</description>
    </item>
    
    <item>
      <title>Border</title>
      <link>/06-css-box-model/box-model-overview/border/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/box-model-overview/border/</guid>
      <description>Border  Every box has a border, and by default it is invisible (0 pixels wide)
 Borders separates the edge of one box from another
 Border is expressed in three parts
 Border width: how thick the border will be
 Border style: solid, dashed, etc
 Border color: color of the border
    /* border is most usually expressed using shorthand which allows you to specify a combination of the border 3 properties when using shorthand for border the order of the values does not matter */ /* style */ border: solid; /* width | style */ border: 2px dotted; /* style | color */ border: outset #f33; /* width | style | color */ border: medium dashed green; /* Border can be applied to individual sides of a box using border-top, border-bottom, border-left or border-right */ border-top: solid 1px blue; /* Also you can specify the border properties individually (this approach is not widely used) */ border-color: red; border-style: solid; border-width: 1px; border-top-color: blue; border-bottom-width: 3px;  JS Bin on jsbin.</description>
    </item>
    
    <item>
      <title>Code Along - Relative Paths</title>
      <link>/03-relative-paths/code-along-relative-paths/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/03-relative-paths/code-along-relative-paths/</guid>
      <description>Code Along: Relative Paths  Using Atom, open the folder called relative_paths_exercise in your lesson_03_files folder. You will be using these files as starting off point.  Instructions  1) Add a link from the Homepage to the About page
 2) Add a link from the About page to the Homepage
 3) Add links from Homepage to index.html pages of the following sections:
 Mammals Birds Reptiles  4) Add links from the Homepage to the index.</description>
    </item>
    
    <item>
      <title>Code Along: Working with Github</title>
      <link>/02-git-github/code-along-working-with-github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02-git-github/code-along-working-with-github/</guid>
      <description>During this exercise, we will be walking through the process of working with Git and Github.
The steps for submitting your assignments using Git &amp;amp; Github are detailed here
Steps  1) Fork this US states repository located on Github.com
 2) Clone the Repository using Github Desktop
 3) Save the local copy of the repository in your FEWD/github folder
 4) Open the project in Atom and fix the spelling errors found in index.</description>
    </item>
    
    <item>
      <title>Documentation</title>
      <link>/21-class-resources/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/21-class-resources/documentation/</guid>
      <description>Referencing documentation is a core task for developers.
 Documentation communicates how something (in our case programming languages, software libraries) works.
 Good documentation reduces implementation time and increases predictability of our software programs.
  We will be referring to the following list of the documentation resources frequently throughout the course:
HTML MDN&amp;rsquo;s HTML Reference
CSS MDN&amp;rsquo;s CSS Reference
Javascript MDN&amp;rsquo;s Javascript Reference
jQuery jQuery Documentation</description>
    </item>
    
    <item>
      <title>Specificity</title>
      <link>/06-css-box-model/css-cascading-guidelines/specificity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/css-cascading-guidelines/specificity/</guid>
      <description>Specificity  If one selector is more specific than others, then the more specific rule takes precedent
 For example:
 h1 is more specific than * p.discount is more specific than p #city is more specific than img.town   Live Example
JS Bin on jsbin.com
In the example above #featured is more specific than .box so the background-color of the element will be red even though .box is listed after #featured</description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/05-css-selectors/agenda/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/05-css-selectors/agenda/</guid>
      <description> Classes and IDs
 CSS Selectors Overview &amp;amp; Examples
 Exercise: CSS Diner
  </description>
    </item>
    
    <item>
      <title>Agenda</title>
      <link>/04-css-basics/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/04-css-basics/agenda/</guid>
      <description> Thinking in boxes
 What is CSS
 Adding CSS to your websites
  </description>
    </item>
    
    <item>
      <title>Exercise: Working with Github</title>
      <link>/02-git-github/exercise-github-workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02-git-github/exercise-github-workflow/</guid>
      <description>Work together in pairs and follow the directions below.
Use this Guide as reference
Steps  1) Fork this repository located on Github.com
 2) Clone the Repository using Github Desktop
 3) Save the local copy of the repository in your FEWD/github folder
 4) Open the project in Atom and and add the lyrics to Barney&amp;rsquo;s (you know the purple dinosaur) hit song &amp;ldquo;I Love You&amp;rdquo;. Save your work.</description>
    </item>
    
    <item>
      <title>!important</title>
      <link>/06-css-box-model/css-cascading-guidelines/important/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/css-cascading-guidelines/important/</guid>
      <description>!important  You can override all the above rules by adding a “!important” after any property
 This should be used sparingly; excessive use of !important can cause confusion within your codebase
  // in css #thing { color: green; } // add the !important option at the end of your declaration; p { color: red !important; }  &amp;lt;!-- in html --&amp;gt; &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Sample Page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p id=&amp;quot;thing&amp;quot;&amp;gt;Will be RED and NOT Green&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  Here we used the !</description>
    </item>
    
    <item>
      <title>Thinking in Boxes</title>
      <link>/04-css-basics/thinking-in-boxes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/04-css-basics/thinking-in-boxes/</guid>
      <description>Understanding the CSS Box Model is key to understanding how CSS works
 Going forward, you should view every element as a box (because that&amp;rsquo;s how browsers view them)
   Block elements in the image are outlined in red, while inline elements are outlined in green
 Every element is a box, some boxes contain other boxes &amp;lt;body&amp;gt;, &amp;lt;div&amp;gt; or &amp;lt;article&amp;gt;
 CSS allows you to create rules the control each individual box</description>
    </item>
    
    <item>
      <title>Intro to CSS</title>
      <link>/04-css-basics/css-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/04-css-basics/css-intro/</guid>
      <description>What is CSS?  Stands for Cascading Style Sheet
 Allows you to control design of page
 With CSS allows you to create rules that specify how the content of an element should appear
  p { color: gray; }  Applying the CSS rule above will result in text color of all &amp;lt;p&amp;gt; tags being changed to gray.
Anatomy of a CSS Rule  CSS works by associating rules with HTML elements.</description>
    </item>
    
    <item>
      <title>Adding CSS to your website</title>
      <link>/04-css-basics/adding-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/04-css-basics/adding-css/</guid>
      <description>There are three ways to add css to your site  1) Inline (avoid!)
 2) Internal css using &amp;lt;style&amp;gt; tag (avoid!)
 3) External file (best practice)
  Inline CSS (avoid!)  This method involves adding styles directly to html elements using a style attribute   &amp;lt;body style=&amp;quot;background-color: orange;&amp;quot;&amp;gt; &amp;lt;!-- other tags redacted for example --&amp;gt; &amp;lt;/body&amp;gt;  Internal CSS (avoid!)  This method involves adding styles directly to html elements using a &amp;lt;style&amp;gt; tag  &amp;lt;!</description>
    </item>
    
    <item>
      <title>Classes and Ids</title>
      <link>/05-css-selectors/classes-and-ids/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/05-css-selectors/classes-and-ids/</guid>
      <description>Classes and Ids  Both are just HTML attributes
 Should start with a letter or underscore
 Can be applied to any html element
 Important: Use of the class or id attribute by itself does not change the appearance of an element; CSS/Javascript must be involved
  Class Attribute  Is used to group elements together, therefore establishing them as different from other elements on the page</description>
    </item>
    
    <item>
      <title>Inheritance</title>
      <link>/06-css-box-model/css-cascading-guidelines/inheritance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/css-cascading-guidelines/inheritance/</guid>
      <description>Inheritance  Certain CSS properties such as font-family, font-size, color will be inherited by child properties
 However, properties such as background color or border properties are not inherited
 Click here to see a full list inherited and non-inherited CSS properties
  Live Example
JS Bin on jsbin.com
In the example, the p element will automatically inherit the font color property from its ancestor (body) since color is a css property that can be inherited.</description>
    </item>
    
    <item>
      <title>Lesson Files</title>
      <link>/course-materials/lesson-files/</link>
      <pubDate>Sun, 17 Mar 2019 13:48:09 -0400</pubDate>
      
      <guid>/course-materials/lesson-files/</guid>
      <description>Lesson Files  Lesson 00 files (Course Intro &amp;amp; Tools) : No files needed
 Lesson 01 files (HTML Basics)
 Lesson 02 files (Git/Github): No files needed
 Lesson 03 files (Relative Paths)
 Lesson 04 files (CSS Basics)
 Lesson 05 files (CSS Selectors): No files needed
 Lesson 06 files (CSS Box Model)
 Lesson 07 files (Page Layout with Flexbox)
 Lesson 08 files (CSS Positioning &amp;amp; Colors): TBD</description>
    </item>
    
    <item>
      <title>Body, Head &amp; Title</title>
      <link>/01-html-basics/tag-overview/body-head-title/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/body-head-title/</guid>
      <description>&amp;lt;html&amp;gt;, &amp;lt;body&amp;gt;, &amp;lt;head&amp;gt;, &amp;lt;title&amp;gt; The following tags make up the structure of all web pages
 &amp;lt;html&amp;gt;
 Represents the root (top-level element) of an HTML document, so it is also referred to as the root element
 All other elements must be descendants of this element.
  &amp;lt;body&amp;gt;
 Everything inside the body tag is shown inside the browser window  &amp;lt;head&amp;gt;
 Contains information about the page (vs shown on the pages</description>
    </item>
    
    <item>
      <title>Keyboard Shortcuts</title>
      <link>/21-class-resources/keyboard-shortcuts/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/21-class-resources/keyboard-shortcuts/</guid>
      <description>General Window Management &amp;amp; Browser Shortcuts    Action Mac Windows     Open Chrome Developer Tools cmd+option + i F2 or ctrl + shift + i   Refresh page cmd + R ctrl + R   Switch between applications cmd + tab alt + tab   Switch between windows in the same application cmd + ~     Atom Shortcuts Files, Windows, Tabs Management    Command macOS Windows Linux Description     Open Settings Menu cmd+, ctrl+, ctrl+, Opens the Atom&amp;rsquo;s settings menu   Open File (Fuzzy) cmd+p or cmd+t ctrl+p or ctrl+t ctrl+p or ctrl+t Opens the Fuzzy Finder   Browse Open Files cmd+b ctrl+b ctrl+b Browse tabs within the window   Previous Tab alt+cmd+left ctrl+pageup ctrl+pageup Cycles left through open tabs (in the active pane)   Next Tab alt+cmd+right ctrl+pagedown ctrl+pagedown Cycles right through open tabs (in the active page)   Toggle Tree View cmd+\ ctrl+\ ctrl+\ Toggles Atom&amp;rsquo;s file Tree View   Show Available Snippets alt+shift+s alt+shift+s alt+shift+s Shows the snippets available to Atom   Save cmd+s ctrl+s ctrl+s Saves the currently active file   Save As shift+cmd+s ctrl+shift+s ctrl+shift+s Saves the currently active file under a different name   Save All alt+cmd+s   Saves all changed files   Close Tab cmd+w ctrl+w ctrl+w Closes the currently active tab   Close Window shift+cmd+w ctrl+shift+w ctrl+shift+w Closes the currently active editor window   Split Window cmd+k up/down/left/right ctrl+k up/down/left/right ctrl+k up/down/left/right Split the currently active tab in one of the four directions   Focus Pane cmd+k cmd+up/down/left/right ctrl+k ctrl+up/down/left/right ctrl+k ctrl+up/down/left/right Move the focus to the pane in one of the four directions   Toggle full screen ctrl+cmd+f F11 F11 Toggle full screen window    Editing    Command macOS Windows Linux Description     Duplicate Lines shift+cmd+d ctrl+shift+d ctrl+shift+d Duplicates the line of the current cursor position and creates a new line under it with the same contents   Delete Line ctrl+shift+k ctrl+shift+k ctrl+shift+k Deletes the current line   Move Line Up ctrl+cmd+up ctrl+up ctrl+up Moves the contents of the current cursor position up one line.</description>
    </item>
    
    <item>
      <title>Objectives</title>
      <link>/00-course-intro-and-tools/objectives/</link>
      <pubDate>Sun, 22 Jan 2017 18:05:18 -0500</pubDate>
      
      <guid>/00-course-intro-and-tools/objectives/</guid>
      <description> Understand what the term &amp;ldquo;front-end Development&amp;rdquo; means
 Introduce tools you will be using throughout the class
 Cover class logistics, structure &amp;amp; keys to success
  </description>
    </item>
    
    <item>
      <title>Flex Container Properties</title>
      <link>/07-page-layout-flexbox/flexbox/flex-container-properties/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>/07-page-layout-flexbox/flexbox/flex-container-properties/</guid>
      <description>The upcoming (and awesome) gifs were graciously borrowed from this insightful blog post that covers flexbox
 display  Defines a flex container
 inline or block depending on the given value
  .container { display: flex; /* or inline-flex */ }  flex direction  Establishes the main-axis and defines the direction flex items are placed in the flex container
 Determines whether the flex items are layed out as either horizontal rows or vertical columns</description>
    </item>
    
    <item>
      <title>Containing Elements</title>
      <link>/07-page-layout-flexbox/containing-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/07-page-layout-flexbox/containing-elements/</guid>
      <description>Containing Elements  Elements that contain groups of elements
 For example, grouping all of the elements associated with the header in a &amp;lt;div&amp;gt;
 &amp;lt;div&amp;gt; tags are commonly used as containing elements
  In example the above example, orange lines represent &amp;lt;div&amp;gt; tags
&amp;lt;div&amp;gt;  Used to group a set of elements together in one block-level box
 &amp;lt;div&amp;gt; element are block-level elements which means they will start on a new line</description>
    </item>
    
    <item>
      <title>HW #1 - Online Travel Guide</title>
      <link>/homework-assignments/assignments/hw-01-online-travel-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/homework-assignments/assignments/hw-01-online-travel-guide/</guid>
      <description>Homework #1: Online Travel Guide Create an online travel guide for a travel destination of your choice
Please refer to the Homework Submission Github Workflow guide for detailed instructions for starting, completing and submitting Homework Assignments
 Directions:  Review the assignment here
 Fork the following repository: fewd20190318/hw-01-online-travel-guide
 Clone the assignment repository down to your computer
 Work on your assignment and regularly commit your work
 Submit your assignment using a Pull Request</description>
    </item>
    
    <item>
      <title>CSS Selectors</title>
      <link>/05-css-selectors/css-selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/05-css-selectors/css-selectors/</guid>
      <description>CSS Selectors Overview  Many different types of selectors that allow you to target rules to specific elements in an HTML document
 Selectors are case sensitive, must match element names and attributes exactly
     Selector Meaning Example     Universal Selector Applies to all elements *{}   Type Selector Match elements names h1, h2, h3 {}   Class Selector Matches all elements with a class attribute value matching on specified after a period (.</description>
    </item>
    
    <item>
      <title>CSS Selectors Examples</title>
      <link>/05-css-selectors/css-selectors-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/05-css-selectors/css-selectors-examples/</guid>
      <description>CSS Selectors Examples Class Selector JS Bin on jsbin.com
ID Selector JS Bin on jsbin.com
Child Selector JS Bin on jsbin.com
Descendent Selector Descendant Selector Example on jsbin.com
Adjacent Sibling Selector Adjacent Sibling Selector example on jsbin.com
General Sibling Selector General Sibling Selector Example on jsbin.com
Pseudo Class Selector JS Bin on jsbin.com
Pseudo Element Selector JS Bin on jsbin.com</description>
    </item>
    
    <item>
      <title>Code Along - About Me</title>
      <link>/04-css-basics/code-along/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/04-css-basics/code-along/</guid>
      <description>Code Along: Building an &amp;ldquo;About Me&amp;rdquo; page  As a class, we&amp;rsquo;ll walk through using html and css to build the &amp;ldquo;About Me&amp;rdquo; page depicted in the image below   Using Atom, open the folder called rocket_raccoon_about_me in your lesson_04_files folder. You will be using these files as starting off point.
 When building websites it is a best practice to have a plan in place before starting out.</description>
    </item>
    
    <item>
      <title>Code Along - GA Press Release</title>
      <link>/01-html-basics/code-along/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-html-basics/code-along/</guid>
      <description> Code Along: GA Press Release  As a class, we&amp;rsquo;ll walk through using html to build out an html version of a press release
 Using Sublime, open the folder called ga_press_release (found within the starter_code) folder
  </description>
    </item>
    
    <item>
      <title>Lab - Portfolio page</title>
      <link>/04-css-basics/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/04-css-basics/lab/</guid>
      <description>Lab: Start/Complete Portfolio Page  Individually or in teams to finish the fictional developer&amp;rsquo;s site by building out their portfolio page (depicted in the image below)
 You will be adding a Portfolio page to your existing rocket_raccoon_about_me project
 Timebox: 35 mins
 Before you start building: Draw a wireframe of the layout to help you plan your approach
 The &amp;ldquo;About Me&amp;rdquo; and &amp;ldquo;Porfolio&amp;rdquo; pages should be linked using a relative url</description>
    </item>
    
    <item>
      <title>Exercise - CSS Diner</title>
      <link>/05-css-selectors/exercise-css-diner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/05-css-selectors/exercise-css-diner/</guid>
      <description> Exercise: CSS Diner During this exercise, you&amp;rsquo;ll go through an interactive tutorial focused on learning the different CSS Selectors
 Complete the interactive tutorial found here
 Timebox: 25 mins
  </description>
    </item>
    
    <item>
      <title>Lab - Cookie Recipe</title>
      <link>/01-html-basics/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-html-basics/lab/</guid>
      <description> Lab: Cookie Recipe  Work individually or in teams to create an html version of a Cookie recipe depicted in the images below
 Using Atom, open the folder called cookie_recipe in your lesson_01_files folder. You will be using these files as starting off point.
 Tips
 Focus on the content first, then the image then the CSS There will be some items that you will need to look up, CSS is one of them (don&amp;rsquo;t worry we will be going over this in the next class, but part of being a developer is being able to google your way to solutions)   </description>
    </item>
    
    <item>
      <title>Flex Items Properties</title>
      <link>/07-page-layout-flexbox/flexbox/flex-items-properties/</link>
      <pubDate>Sun, 22 Jan 2017 18:04:24 -0500</pubDate>
      
      <guid>/07-page-layout-flexbox/flexbox/flex-items-properties/</guid>
      <description>align-self  allows the default alignment (or the one specified by align-items) to be overridden for individual flex items.   .item { align-self: auto | flex-start | flex-end | center | baseline | stretch; }  Order  controls the order in which flex-items appear in the flex container   .item { order: &amp;lt;integer&amp;gt;; }  flex-grow  defines the ability for a flex item to grow if necessary</description>
    </item>
    
    <item>
      <title>Code Along - Tags and Boxes</title>
      <link>/06-css-box-model/code-along-tags-and-boxes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/code-along-tags-and-boxes/</guid>
      <description> Code Along: Tags &amp;amp; Boxes  Using Atom, open the folder called tags_boxes in your lesson_06_files folder. You will be using these files as starting off point.
 As a class, we&amp;rsquo;ll walk through seeing examples of the box model in action
  </description>
    </item>
    
    <item>
      <title>Recommended Atom Editor Settings</title>
      <link>/21-class-resources/atom-editor-settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/21-class-resources/atom-editor-settings/</guid>
      <description>All of the settings below can be accessed using the following steps:
 Mac: cmd + , -&amp;gt; Editor PC: ctrl + , -&amp;gt; Editor  Setting indentation levels / default tab-size During our course we will be using a set indentation level of 2 spaces (1 indentation level = 2 spaces). Atom makes it easy conform to this approach by setting our tab to a set level of indentation.</description>
    </item>
    
    <item>
      <title>Semantic Elements</title>
      <link>/07-page-layout-flexbox/semantic-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/07-page-layout-flexbox/semantic-elements/</guid>
      <description>Structure using Semantic tags  Similar to &amp;lt;div&amp;gt;s, semantic tags are container elements
 HTML5 introduced semantic tags that directly communicate type of content the container element contains
 Important note: incorrect use of the tags will not result in any errors (but may be confusing for your teammates)
 Above picture is just an example! This structure is not set in stone, use what makes sense for your project</description>
    </item>
    
    <item>
      <title>Code Along - Notifications</title>
      <link>/06-css-box-model/code-along-notifications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/code-along-notifications/</guid>
      <description> Code Along: Notifications  Using Atom, open the folder called notifications in your lesson_06_files folder. You will be using these files as starting off point.
 As a class, we&amp;rsquo;ll see examples of using classes and ids to style notifications that are often used to provide contextual information to users within an application
  </description>
    </item>
    
    <item>
      <title>Solutions</title>
      <link>/course-materials/solutions/</link>
      <pubDate>Sun, 17 Mar 2019 14:08:08 -0400</pubDate>
      
      <guid>/course-materials/solutions/</guid>
      <description> Solutions Disclaimer: These files are not meant to be viewed as the &amp;ldquo;right answer, instead view them as a way to learn how another developer approached the same problem.
 Lesson 01: HTML Basics  GA Press Release Solution Cookie Receipe Solution  Lesson 03: Relative Paths  Relative Paths Exercise Solution  Lesson 04: CSS Basics  Rocket Raccoon About Me Solution  </description>
    </item>
    
    <item>
      <title>Text</title>
      <link>/01-html-basics/tag-overview/text/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/text/</guid>
      <description>HTML Headings  Six (6) levels of headings h1 tags is used for main headings h2 tags are used for subheadings Remaining level headings used as needed based on your content hierarchy  Browsers display headings differently, but relative sizes will always be consistent (by default) - i.e. h1 will always be bigger than h2
 JS Bin on jsbin.com
Paragraphs  Use &amp;lt;p&amp;gt; element to display paragraphs
 By default, browser displays each paragraph on a new line</description>
    </item>
    
    <item>
      <title>Lab - Fashion Blog</title>
      <link>/06-css-box-model/lab-fashion-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/lab-fashion-blog/</guid>
      <description>Lab: Fashion Blog  Work in teams to finish the fictional developer&amp;rsquo;s site by building out their portfolio page (depicted in the image below)
 Timebox: 40 mins
   Using Atom, open the folder called fashion_blog in your lesson_06_files folder. You will be using these files as starting off point.
 Before you start building: Draw a wireframe of the layout to help you plan your approach</description>
    </item>
    
    <item>
      <title>Working with Atom Themes</title>
      <link>/21-class-resources/atom-themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/21-class-resources/atom-themes/</guid>
      <description>Changing Themes Atom allows you to easily switch between your installed themes by doing the following:
 Opening Atom Settings (mac: cmd + , | pc: ctrl + ,) Select Themes in the left-hand menu Select the dropdown menu labeled Syntax Themes Choose one of the installed themes listed in the dropdown menu  Atom comes pre-installed with a set of themes. See that section below to add new themes to Atom</description>
    </item>
    
    <item>
      <title>What Is front-end Development?</title>
      <link>/00-course-intro-and-tools/what-is-frontend-development/</link>
      <pubDate>Sat, 16 Mar 2019 19:57:51 -0400</pubDate>
      
      <guid>/00-course-intro-and-tools/what-is-frontend-development/</guid>
      <description>Overview  Front-end web development, also known as client-side development is the practice of producing HTML, CSS and JavaScript for a website or Web Application so that a user can see and interact with them directly.  What are the primary technologies associated with front-end development?  HTML
 CSS
 Javascript
  How is front-end development differ from back-end development?  Backend development, is also known as server-side development and involves storing data on behalf of users or customers</description>
    </item>
    
    <item>
      <title>Exercise - Flexbox Froggy</title>
      <link>/07-page-layout-flexbox/exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/07-page-layout-flexbox/exercise/</guid>
      <description> Exercise: Flexbox Froggy During this exercise, you&amp;rsquo;ll go through an interactive tutorial focused on learning flexbox
 Each student complete this tutorial
 Timebox: 20 mins
  </description>
    </item>
    
    <item>
      <title>Class Logistics &amp; Materials</title>
      <link>/00-course-intro-and-tools/class-logistics-materials/</link>
      <pubDate>Sat, 16 Mar 2019 10:04:07 -0400</pubDate>
      
      <guid>/00-course-intro-and-tools/class-logistics-materials/</guid>
      <description>Class Logistics  Class Schedule: Monday &amp;amp; Wednesdays, 6:30pm - 9:30pm, from Mar 18th through May 22nd
 Break: 15 minute break during the middle of class from 7:45pm to 8:00pm (subject to change depending on flow of the class, but you&amp;rsquo;ll always get a 15 min break)
 Class Materials: Most lessons will include a set of files that you&amp;rsquo;ll work with during that lesson, we&amp;rsquo;ll refer to these files as the &amp;ldquo;lesson files&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Lists</title>
      <link>/01-html-basics/tag-overview/lists/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/lists/</guid>
      <description>Lists  3 different types of lists:
 Unordered - lists start with a bullet point by default Ordered - numbered lists Definition - set of terms along with definition of those terms (not used often)  Both unordered and ordered lists contain list items
 list items elements are the items within list, they use opening and closing tag
 list item elements are indented by default
 list items elements are always a child a list element (in this case the “unordered list” or ul element.</description>
    </item>
    
    <item>
      <title>Code Along - Layout Challenge</title>
      <link>/07-page-layout-flexbox/code-along/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/07-page-layout-flexbox/code-along/</guid>
      <description> Code Along: Page Layout using Flexbox  Using Atom, open the folder called layout_challenge in your lesson_07_files folder. You will be using these files as starting off point.
 As a class, we&amp;rsquo;ll use flexbox to create the following page layouts (depicted in the images below)
  </description>
    </item>
    
    <item>
      <title>Course Tools</title>
      <link>/00-course-intro-and-tools/tools/</link>
      <pubDate>Sat, 16 Mar 2019 10:03:50 -0400</pubDate>
      
      <guid>/00-course-intro-and-tools/tools/</guid>
      <description>Text Editor:
 Why?: Text editor is a program that developers use to create and edit a range of programming language files. We&amp;rsquo;ll be using Atom, because it&amp;rsquo;s open source (free) and really good.
 Download Atom
  Browser:
 Why?: Google chrome is a robust browser with a variety of tools that are helpful to developers.
 Install Google Chrome
  Github:
 Why?: Github (and Git) are tools/applications used to by developers to manage their code and work collaboratively with each other.</description>
    </item>
    
    <item>
      <title>Lab - Layout Challenge</title>
      <link>/07-page-layout-flexbox/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/07-page-layout-flexbox/lab/</guid>
      <description>Lab: Layout Challenge  Using Atom, open the folder called layout_challenge in your lesson_07_files folder. You will be using these files as starting off point.
 Work in teams to use flexbox to recreate the remaining layouts depicted in layout_challenge/layouts.pdf file
 Before you start building:
 Draw a wireframe of the layout Identify your flex containers  Tips
 Use the &amp;ldquo;guideline&amp;rdquo; css style (provided at the top of your css files) to help you visually identify your containers Have the name of all of your flex containers end in &amp;ldquo;-container&amp;rdquo; for example (.</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>/01-html-basics/tag-overview/links/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/links/</guid>
      <description> Links  Links created using the &amp;lt;a&amp;gt; tag
 link tags use the href attribute (remember attributes come with a name and a value)
 The value of the href attribute is the location where the link will direct you after it has been clicked
  &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;!-- contains information about the page --&amp;gt; &amp;lt;title&amp;gt;My page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;a href=&amp;quot;https://www.cnn.com&amp;quot;&amp;gt; CNN &amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;/about_us.html&amp;quot;&amp;gt;About Us&amp;lt;/a&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
    <item>
      <title>Folder Organization</title>
      <link>/00-course-intro-and-tools/folder-structure/</link>
      <pubDate>Sat, 16 Mar 2019 10:03:59 -0400</pubDate>
      
      <guid>/00-course-intro-and-tools/folder-structure/</guid>
      <description> Recommended Folder Organization  Create a folder in your Documents (My Documents on Windows) folder called FEWD
 At beginning of every class, download and unzip (mac instructions | windows instructions) the &amp;ldquo;Lesson Files&amp;rdquo; for that lesson directly into your FEWD folder
  While the lesson files will be hosted on Dropbox, you do not need to have a dropbox account to download the files.
  As the course progresses you&amp;rsquo;ll have a neatly organized listing of all of your work that looks similar to this:  </description>
    </item>
    
    <item>
      <title>Images</title>
      <link>/01-html-basics/tag-overview/images/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/images/</guid>
      <description>Images  Images are placed in a &amp;lt;img&amp;gt;
 Empty element meaning there is no closing tag
   &amp;lt;img src=&amp;quot;images/team_hands&amp;quot; alt=&amp;quot;a group of people touching hands in a star formation&amp;quot; title=&amp;quot;teamwork is awesome&amp;quot;&amp;gt;  Image Attributes  src - Tells browser where to find the image (may relative or absolute path)
 alt - Provides description of image for people who cannot see the image (accessibility)
 title - Used to provide additional information about the image.</description>
    </item>
    
    <item>
      <title>Keys to Success</title>
      <link>/00-course-intro-and-tools/keys-to-success/</link>
      <pubDate>Sat, 16 Mar 2019 17:11:17 -0400</pubDate>
      
      <guid>/00-course-intro-and-tools/keys-to-success/</guid>
      <description>Do your homework: More you practice the concepts learned in class, the faster you&amp;rsquo;ll pick them up
 Don&amp;rsquo;t try to memorize anything: You&amp;rsquo;ll memorize things naturally through the act of doing things over and over again. Besides, if you don&amp;rsquo;t remember something just look it up (i.e. google).
 Work smarter not harder: In additional to looking things up, developers are really good at referencing past code that they&amp;rsquo;ve used in the past to solve problems they encounter in the present.</description>
    </item>
    
    <item>
      <title>Tables</title>
      <link>/01-html-basics/tag-overview/tables/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/tables/</guid>
      <description>Tables  Tables represent data in a grid format
 Table Tags
 &amp;lt;table&amp;gt;: element used to create a table
 &amp;lt;tr&amp;gt;: table row
 &amp;lt;td&amp;gt;: table data, represents a cell in the table
 &amp;lt;th&amp;gt;: table headings used to respresent the header for a column or a row
   Learn more about tables here
 ---- Table examples  JS Bin on jsbin.com
JS Bin on jsbin.</description>
    </item>
    
    <item>
      <title>Block &amp; Inline Elements</title>
      <link>/01-html-basics/tag-overview/block-and-inline-elements/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/block-and-inline-elements/</guid>
      <description>Block Elements  Block elements always appear on a new line in the browser window
 &amp;lt;h1&amp;gt;, &amp;lt;p&amp;gt;, &amp;lt;ul&amp;gt;, and &amp;lt;li&amp;gt; are examples of block elements
  JS Bin on jsbin.com
Inline Elements  Inline elements will always appear to continue on the same line as their neighboring elements
 &amp;lt;a&amp;gt;, &amp;lt;img&amp;gt;, &amp;lt;b&amp;gt;, and &amp;lt;em&amp;gt; are examples of inline elements
  JS Bin on jsbin.com</description>
    </item>
    
    <item>
      <title>Divs &amp; Spans</title>
      <link>/01-html-basics/tag-overview/divs-spans/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/divs-spans/</guid>
      <description>Divs  Divs allow you to group a set of elements together in one block-level box  JS Bin on jsbin.com
 Divs are mainly used to break your content up into logical sections. By doing so, you have more control of the layout and appearance of your pages.  Spans  Spans are the inline equivalent to Divs
 Spans are used to either:
 contain a section of text where there is no other suitable element to differentiate it from its surrounding text</description>
    </item>
    
    <item>
      <title>Other Tags</title>
      <link>/01-html-basics/tag-overview/other-tags/</link>
      <pubDate>Thu, 14 Mar 2019 20:29:59 -0400</pubDate>
      
      <guid>/01-html-basics/tag-overview/other-tags/</guid>
      <description>Many more tags There are many other tags available to developers such as:
 &amp;lt;b&amp;gt; Makes text bold&amp;lt;/b&amp;gt; &amp;lt;i&amp;gt; Italic text &amp;lt;/i&amp;gt; &amp;lt;br/&amp;gt; Used to break text within a paragraph &amp;lt;hr /&amp;gt; Used to add a horizontal line to visually break up text  JS Bin on jsbin.com
MDN (Mozilla Developer Network) is an excellent resource for all things HTML, CSS and Javascript. For a complete list of all tags avaiable click here</description>
    </item>
    
    <item>
      <title>Reading Assignment</title>
      <link>/01-html-basics/reading-assignment/</link>
      <pubDate>Sun, 17 Mar 2019 01:04:09 -0400</pubDate>
      
      <guid>/01-html-basics/reading-assignment/</guid>
      <description>View the following videos before the next class
 Video: What is Version Control (6 mins) 
 Video: What is Git (8 mins)
 Video: What is Github? (4 mins)
  Complete the following tutorial before the next class
 Tutorial: Hello World Github Tutorial  </description>
    </item>
    
  </channel>
</rss>