<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS Box Model on FEWD</title>
    <link>/06-css-box-model/</link>
    <description>Recent content in CSS Box Model on FEWD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jan 2017 18:04:24 -0500</lastBuildDate>
    
	<atom:link href="/06-css-box-model/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Agenda</title>
      <link>/06-css-box-model/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/agenda/</guid>
      <description> Discuss how CSS Cascades
 Box Model
 Code Along: Tags &amp;amp; Boxes
 Lab: Fashion Blog
  </description>
    </item>
    
    <item>
      <title>CSS Cascading Guidelines</title>
      <link>/06-css-box-model/css-cascading-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/css-cascading-guidelines/</guid>
      <description>How CSS Cascades There are guidelines that will determine which CSS rule takes precendent in the case of a conflict (when 2 or more css rules target the same selector)
 Last Rule
 Specificity
 Important
 Inheritance
  Last Rule  When two or more css rules have identical selectors, the latter of the two rules takes precedent   // in css p { color: red; } p { color: green; }  &amp;lt;!</description>
    </item>
    
    <item>
      <title>CSS Box Model</title>
      <link>/06-css-box-model/box-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/box-model/</guid>
      <description>CSS Box Model  Understanding the CSS Box Model is key to understanding how CSS works
 Going forward, you should view every element as a box (because that&amp;rsquo;s how browsers view them)
   Block elements in the image are outlined in red, while inline elements are outlined in green
 Every element is a box, some boxes contain other boxes &amp;lt;body&amp;gt;, &amp;lt;div&amp;gt; or &amp;lt;article&amp;gt;
 CSS allows you to create rules the control each individual box</description>
    </item>
    
    <item>
      <title>Code Along - Tags and Boxes</title>
      <link>/06-css-box-model/code-along-tags-and-boxes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/code-along-tags-and-boxes/</guid>
      <description> Code Along: Tags &amp;amp; Boxes  Using Atom, open the folder called relative_paths_exercise in your lesson_04_files folder. You will be using these files as starting off point.
 As a class, we&amp;rsquo;ll walk through seeing examples of the box model in action
  </description>
    </item>
    
    <item>
      <title>Lab - Portfolio page</title>
      <link>/06-css-box-model/lab-fashion-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/06-css-box-model/lab-fashion-blog/</guid>
      <description>Lab: Fashion Blog  Individually or in teams to finishing the fictional developer&amp;rsquo;s site by building our their portfolio page (depicted in the image below)
 Timebox: 40 mins
   Using Atom, open the folder called fashion-blog in your lesson_06_files folder. You will be using these files as starting off point.
 Before you start building: Draw a wireframe of the layout to help you plan your approach</description>
    </item>
    
  </channel>
</rss>